INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns all Asset Administration Shells', 'operationId': 'GetAllAssetAdministrationShells', 'parameters': [{'name': 'assetIds', 'in': 'query', 'description': 'The key-value-pair of an Asset identifier', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'example': '[{"key": "globalAssetId","value": "http://example.company/myAsset"},{"key": "myOwnInternalAssetId","value": "12345ABC"}]', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}, {'name': 'idShort', 'in': 'query', 'description': 'The Asset Administration Shell’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shells', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShells/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByAssetId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByIdShort/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Creates a new Asset Administration Shell', 'operationId': 'PostAssetAdministrationShell', 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/shells', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns all Asset Administration Shells', 'operationId': 'GetAllAssetAdministrationShells', 'parameters': [{'name': 'assetIds', 'in': 'query', 'description': 'The key-value-pair of an Asset identifier', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'example': '[{"key": "globalAssetId","value": "http://example.company/myAsset"},{"key": "myOwnInternalAssetId","value": "12345ABC"}]', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}, {'name': 'idShort', 'in': 'query', 'description': 'The Asset Administration Shell’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shells', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShells/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByAssetId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByIdShort/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Creates a new Asset Administration Shell', 'operationId': 'PostAssetAdministrationShell', 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells', substituted_url='/shells', path_params=None, get_response_json=[{'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932something'}, 'idShort': 'FestoDemoAAS'}], get_response=<Response [200]>, single_get_response={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932something'}, 'idShort': 'FestoDemoAAS'}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/shells', 'post', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns all Asset Administration Shells', 'operationId': 'GetAllAssetAdministrationShells', 'parameters': [{'name': 'assetIds', 'in': 'query', 'description': 'The key-value-pair of an Asset identifier', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'example': '[{"key": "globalAssetId","value": "http://example.company/myAsset"},{"key": "myOwnInternalAssetId","value": "12345ABC"}]', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}, {'name': 'idShort', 'in': 'query', 'description': 'The Asset Administration Shell’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shells', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShells/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByAssetId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByIdShort/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Creates a new Asset Administration Shell', 'operationId': 'PostAssetAdministrationShell', 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells', substituted_url='/shells', path_params=None, get_response_json=[{'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932something'}, 'idShort': 'FestoDemoAAS'}], get_response=<Response [200]>, single_get_response={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932something'}, 'idShort': 'FestoDemoAAS'}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns a specific Asset Administration Shell', 'operationId': 'GetAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Updates an existing Asset Administration Shell', 'operationId': 'PutAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Deletes an Asset Administration Shell', 'operationId': 'DeleteAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/shells/{aasIdentifier}', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns a specific Asset Administration Shell', 'operationId': 'GetAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Updates an existing Asset Administration Shell', 'operationId': 'PutAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Deletes an Asset Administration Shell', 'operationId': 'DeleteAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}', substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path_params=None, get_response_json={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [200]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('/shells/{aasIdentifier}', 'put', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns a specific Asset Administration Shell', 'operationId': 'GetAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Updates an existing Asset Administration Shell', 'operationId': 'PutAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Deletes an Asset Administration Shell', 'operationId': 'DeleteAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}', substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path_params=None, get_response_json={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), TypeError("'NoneType' object is not subscriptable"), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Administration Shell', 'operationId': 'GetAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShell/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Administration Shell', 'operationId': 'PutAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/shells/{aasIdentifier}/aas', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Administration Shell', 'operationId': 'GetAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShell/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Administration Shell', 'operationId': 'PutAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas', substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/aas', path_params=None, get_response_json={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [200]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('/shells/{aasIdentifier}/aas', 'put', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Administration Shell', 'operationId': 'GetAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShell/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Administration Shell', 'operationId': 'PutAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas', substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/aas', path_params=None, get_response_json={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), TypeError("'NoneType' object is not subscriptable"), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Information', 'operationId': 'GetAssetInformation', 'responses': {'200': {'description': 'Requested Asset Information', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetInformation/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Information', 'operationId': 'PutAssetInformation', 'requestBody': {'description': 'Asset Information object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Information updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetInformation/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas/asset-information', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/shells/{aasIdentifier}/aas/asset-information', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Information', 'operationId': 'GetAssetInformation', 'responses': {'200': {'description': 'Requested Asset Information', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetInformation/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Information', 'operationId': 'PutAssetInformation', 'requestBody': {'description': 'Asset Information object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Information updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetInformation/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas/asset-information', substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/aas/asset-information', path_params=None, get_response_json={'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, get_response=<Response [200]>, single_get_response={'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, post_data=None, patch_data=None, put_data={'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, post_response=None, post_response_json=None, put_response_json=True, put_response=<Response [204]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [204]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=False, schema_conformation=False), '/shells/{aasIdentifier}/aas/asset-information', 'put', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Information', 'operationId': 'GetAssetInformation', 'responses': {'200': {'description': 'Requested Asset Information', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetInformation/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Information', 'operationId': 'PutAssetInformation', 'requestBody': {'description': 'Asset Information object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Information updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetInformation/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas/asset-information', substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/aas/asset-information', path_params=None, get_response_json={'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, get_response=<Response [200]>, single_get_response={'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, post_data=None, patch_data=None, put_data={'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, post_response=None, post_response_json=None, put_response_json=True, put_response=<Response [204]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns all submodel references', 'operationId': 'GetAllSubmodelReferences', 'responses': {'200': {'description': 'Requested submodel references', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Reference'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelReferences/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Creates a submodel reference at the Asset Administration Shell', 'operationId': 'PostSubmodelReference', 'requestBody': {'description': 'Reference to the Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel reference created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelReference/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas/submodels', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/shells/{aasIdentifier}/aas/submodels', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns all submodel references', 'operationId': 'GetAllSubmodelReferences', 'responses': {'200': {'description': 'Requested submodel references', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Reference'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelReferences/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Creates a submodel reference at the Asset Administration Shell', 'operationId': 'PostSubmodelReference', 'requestBody': {'description': 'Reference to the Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel reference created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelReference/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas/submodels', substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/aas/submodels', path_params=None, get_response_json=[{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], get_response=<Response [200]>, single_get_response={'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}, post_data={'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}, patch_data=None, put_data=None, post_response=<Response [201]>, post_response_json={'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [201]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=False, schema_conformation=False), '/shells/{aasIdentifier}/aas/submodels', 'post', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns all submodel references', 'operationId': 'GetAllSubmodelReferences', 'responses': {'200': {'description': 'Requested submodel references', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Reference'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelReferences/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Creates a submodel reference at the Asset Administration Shell', 'operationId': 'PostSubmodelReference', 'requestBody': {'description': 'Reference to the Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel reference created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelReference/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas/submodels', substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/aas/submodels', path_params=None, get_response_json=[{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], get_response=<Response [200]>, single_get_response={'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}, post_data={'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}, patch_data=None, put_data=None, post_response=<Response [201]>, post_response_json={'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns all Submodels', 'operationId': 'GetAllSubmodels', 'parameters': [{'name': 'semanticId', 'in': 'query', 'description': 'The value of the semantic id reference (BASE64-URL-encoded)', 'schema': {'type': 'string'}}, {'name': 'idShort', 'in': 'query', 'description': 'The Submodel’s idShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodels', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Submodel'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodels/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/1/0/RC01']}, 'post': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new Submodel', 'operationId': 'PostSubmodel', 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/submodels', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns all Submodels', 'operationId': 'GetAllSubmodels', 'parameters': [{'name': 'semanticId', 'in': 'query', 'description': 'The value of the semantic id reference (BASE64-URL-encoded)', 'schema': {'type': 'string'}}, {'name': 'idShort', 'in': 'query', 'description': 'The Submodel’s idShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodels', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Submodel'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodels/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/1/0/RC01']}, 'post': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new Submodel', 'operationId': 'PostSubmodel', 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels', substituted_url='/submodels', path_params=None, get_response_json=[{'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/1145_8090_6012_5097'}, 'idShort': 'Config'}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2110_9090_6012_8448'}, 'idShort': 'CalculatedAverages', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'GripperUpAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'GripperOpenAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'DistanceSensorAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateEntranceAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateMiddleAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateExitAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltForwardAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltBackwardAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'isRunningAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_greenAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_yellowAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_redAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltReadyAverage'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/5410_9090_6012_0950'}, 'idShort': 'DaySummary', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'string', 'idShort': 'JTS_data'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2402_1191_1022_1090something'}, 'idShort': 'ProducerRecommendations', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '4.1', 'valueType': 'float', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '16.2', 'valueType': 'float', 'idShort': 'ProcessDuration'}]}], get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2402_1191_1022_1090something'}, 'idShort': 'ProducerRecommendations', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '4.1', 'valueType': 'float', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '16.2', 'valueType': 'float', 'idShort': 'ProcessDuration'}]}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/submodels', 'post', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns all Submodels', 'operationId': 'GetAllSubmodels', 'parameters': [{'name': 'semanticId', 'in': 'query', 'description': 'The value of the semantic id reference (BASE64-URL-encoded)', 'schema': {'type': 'string'}}, {'name': 'idShort', 'in': 'query', 'description': 'The Submodel’s idShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodels', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Submodel'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodels/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/1/0/RC01']}, 'post': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new Submodel', 'operationId': 'PostSubmodel', 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels', substituted_url='/submodels', path_params=None, get_response_json=[{'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/1145_8090_6012_5097'}, 'idShort': 'Config'}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2110_9090_6012_8448'}, 'idShort': 'CalculatedAverages', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'GripperUpAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'GripperOpenAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'DistanceSensorAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateEntranceAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateMiddleAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateExitAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltForwardAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltBackwardAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'isRunningAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_greenAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_yellowAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_redAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltReadyAverage'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/5410_9090_6012_0950'}, 'idShort': 'DaySummary', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'string', 'idShort': 'JTS_data'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2402_1191_1022_1090something'}, 'idShort': 'ProducerRecommendations', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '4.1', 'valueType': 'float', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '16.2', 'valueType': 'float', 'idShort': 'ProcessDuration'}]}], get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2402_1191_1022_1090something'}, 'idShort': 'ProducerRecommendations', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '4.1', 'valueType': 'float', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '16.2', 'valueType': 'float', 'idShort': 'ProcessDuration'}]}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns a specific Submodel', 'operationId': 'GetSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelById/1/0/RC01']}, 'put': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new or updates an existing Submodel', 'operationId': 'PutSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}, '204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelById/1/0/RC01']}, 'delete': {'tags': ['Submodel Repository Interface'], 'summary': 'Deletes a Submodel', 'operationId': 'DeleteSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/submodels/{submodelIdentifier}', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns a specific Submodel', 'operationId': 'GetSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelById/1/0/RC01']}, 'put': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new or updates an existing Submodel', 'operationId': 'PutSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}, '204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelById/1/0/RC01']}, 'delete': {'tags': ['Submodel Repository Interface'], 'summary': 'Deletes a Submodel', 'operationId': 'DeleteSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}', substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path_params=None, get_response_json={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [200]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('/submodels/{submodelIdentifier}', 'put', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns a specific Submodel', 'operationId': 'GetSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelById/1/0/RC01']}, 'put': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new or updates an existing Submodel', 'operationId': 'PutSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}, '204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelById/1/0/RC01']}, 'delete': {'tags': ['Submodel Repository Interface'], 'summary': 'Deletes a Submodel', 'operationId': 'DeleteSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}', substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path_params=None, get_response_json={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), TypeError("'NoneType' object is not subscriptable"), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns the Submodel', 'operationId': 'GetSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodel/1/0/RC01']}, 'put': {'tags': ['Submodel Interface'], 'summary': 'Updates the Submodel', 'operationId': 'PutSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/submodels/{submodelIdentifier}/submodel', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns the Submodel', 'operationId': 'GetSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodel/1/0/RC01']}, 'put': {'tags': ['Submodel Interface'], 'summary': 'Updates the Submodel', 'operationId': 'PutSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel', substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel', path_params=None, get_response_json={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [200]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('/submodels/{submodelIdentifier}/submodel', 'put', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns the Submodel', 'operationId': 'GetSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodel/1/0/RC01']}, 'put': {'tags': ['Submodel Interface'], 'summary': 'Updates the Submodel', 'operationId': 'PutSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel', substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel', path_params=None, get_response_json={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), TypeError("'NoneType' object is not subscriptable"), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns all Asset Administration Shells', 'operationId': 'GetAllAssetAdministrationShells', 'parameters': [{'name': 'assetIds', 'in': 'query', 'description': 'The key-value-pair of an Asset identifier', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'example': '[{"key": "globalAssetId","value": "http://example.company/myAsset"},{"key": "myOwnInternalAssetId","value": "12345ABC"}]', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}, {'name': 'idShort', 'in': 'query', 'description': 'The Asset Administration Shell’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shells', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShells/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByAssetId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByIdShort/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Creates a new Asset Administration Shell', 'operationId': 'PostAssetAdministrationShell', 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/shells', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns all Asset Administration Shells', 'operationId': 'GetAllAssetAdministrationShells', 'parameters': [{'name': 'assetIds', 'in': 'query', 'description': 'The key-value-pair of an Asset identifier', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'example': '[{"key": "globalAssetId","value": "http://example.company/myAsset"},{"key": "myOwnInternalAssetId","value": "12345ABC"}]', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}, {'name': 'idShort', 'in': 'query', 'description': 'The Asset Administration Shell’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shells', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShells/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByAssetId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByIdShort/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Creates a new Asset Administration Shell', 'operationId': 'PostAssetAdministrationShell', 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells', substituted_url='/shells', path_params=None, get_response_json=[{'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932something'}, 'idShort': 'FestoDemoAAS'}], get_response=<Response [200]>, single_get_response={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932something'}, 'idShort': 'FestoDemoAAS'}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/shells', 'post', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns all Asset Administration Shells', 'operationId': 'GetAllAssetAdministrationShells', 'parameters': [{'name': 'assetIds', 'in': 'query', 'description': 'The key-value-pair of an Asset identifier', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'example': '[{"key": "globalAssetId","value": "http://example.company/myAsset"},{"key": "myOwnInternalAssetId","value": "12345ABC"}]', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}, {'name': 'idShort', 'in': 'query', 'description': 'The Asset Administration Shell’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shells', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShells/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByAssetId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByIdShort/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Creates a new Asset Administration Shell', 'operationId': 'PostAssetAdministrationShell', 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells', substituted_url='/shells', path_params=None, get_response_json=[{'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932something'}, 'idShort': 'FestoDemoAAS'}], get_response=<Response [200]>, single_get_response={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932something'}, 'idShort': 'FestoDemoAAS'}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns a specific Asset Administration Shell', 'operationId': 'GetAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Updates an existing Asset Administration Shell', 'operationId': 'PutAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Deletes an Asset Administration Shell', 'operationId': 'DeleteAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/shells/{aasIdentifier}', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns a specific Asset Administration Shell', 'operationId': 'GetAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Updates an existing Asset Administration Shell', 'operationId': 'PutAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Deletes an Asset Administration Shell', 'operationId': 'DeleteAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}', substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path_params=None, get_response_json={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [200]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('/shells/{aasIdentifier}', 'put', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns a specific Asset Administration Shell', 'operationId': 'GetAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Updates an existing Asset Administration Shell', 'operationId': 'PutAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Deletes an Asset Administration Shell', 'operationId': 'DeleteAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}', substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path_params=None, get_response_json={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), TypeError("'NoneType' object is not subscriptable"), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Administration Shell', 'operationId': 'GetAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShell/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Administration Shell', 'operationId': 'PutAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/shells/{aasIdentifier}/aas', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Administration Shell', 'operationId': 'GetAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShell/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Administration Shell', 'operationId': 'PutAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas', substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/aas', path_params=None, get_response_json={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [200]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('/shells/{aasIdentifier}/aas', 'put', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Administration Shell', 'operationId': 'GetAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShell/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Administration Shell', 'operationId': 'PutAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas', substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/aas', path_params=None, get_response_json={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), TypeError("'NoneType' object is not subscriptable"), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Information', 'operationId': 'GetAssetInformation', 'responses': {'200': {'description': 'Requested Asset Information', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetInformation/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Information', 'operationId': 'PutAssetInformation', 'requestBody': {'description': 'Asset Information object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Information updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetInformation/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas/asset-information', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/shells/{aasIdentifier}/aas/asset-information', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Information', 'operationId': 'GetAssetInformation', 'responses': {'200': {'description': 'Requested Asset Information', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetInformation/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Information', 'operationId': 'PutAssetInformation', 'requestBody': {'description': 'Asset Information object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Information updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetInformation/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas/asset-information', substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/aas/asset-information', path_params=None, get_response_json={'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, get_response=<Response [200]>, single_get_response={'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, post_data=None, patch_data=None, put_data={'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, post_response=None, post_response_json=None, put_response_json=True, put_response=<Response [204]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [204]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=False, schema_conformation=False), '/shells/{aasIdentifier}/aas/asset-information', 'put', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Information', 'operationId': 'GetAssetInformation', 'responses': {'200': {'description': 'Requested Asset Information', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetInformation/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Information', 'operationId': 'PutAssetInformation', 'requestBody': {'description': 'Asset Information object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Information updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetInformation/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas/asset-information', substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/aas/asset-information', path_params=None, get_response_json={'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, get_response=<Response [200]>, single_get_response={'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, post_data=None, patch_data=None, put_data={'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, post_response=None, post_response_json=None, put_response_json=True, put_response=<Response [204]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns all submodel references', 'operationId': 'GetAllSubmodelReferences', 'responses': {'200': {'description': 'Requested submodel references', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Reference'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelReferences/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Creates a submodel reference at the Asset Administration Shell', 'operationId': 'PostSubmodelReference', 'requestBody': {'description': 'Reference to the Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel reference created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelReference/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas/submodels', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/shells/{aasIdentifier}/aas/submodels', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns all submodel references', 'operationId': 'GetAllSubmodelReferences', 'responses': {'200': {'description': 'Requested submodel references', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Reference'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelReferences/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Creates a submodel reference at the Asset Administration Shell', 'operationId': 'PostSubmodelReference', 'requestBody': {'description': 'Reference to the Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel reference created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelReference/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas/submodels', substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/aas/submodels', path_params=None, get_response_json=[{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], get_response=<Response [200]>, single_get_response={'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}, post_data={'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}, patch_data=None, put_data=None, post_response=<Response [201]>, post_response_json={'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [201]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=False, schema_conformation=False), '/shells/{aasIdentifier}/aas/submodels', 'post', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns all submodel references', 'operationId': 'GetAllSubmodelReferences', 'responses': {'200': {'description': 'Requested submodel references', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Reference'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelReferences/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Creates a submodel reference at the Asset Administration Shell', 'operationId': 'PostSubmodelReference', 'requestBody': {'description': 'Reference to the Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel reference created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelReference/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/shells/{aasIdentifier}/aas/submodels', substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/aas/submodels', path_params=None, get_response_json=[{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], get_response=<Response [200]>, single_get_response={'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}, post_data={'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}, patch_data=None, put_data=None, post_response=<Response [201]>, post_response_json={'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns all Submodels', 'operationId': 'GetAllSubmodels', 'parameters': [{'name': 'semanticId', 'in': 'query', 'description': 'The value of the semantic id reference (BASE64-URL-encoded)', 'schema': {'type': 'string'}}, {'name': 'idShort', 'in': 'query', 'description': 'The Submodel’s idShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodels', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Submodel'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodels/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/1/0/RC01']}, 'post': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new Submodel', 'operationId': 'PostSubmodel', 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/submodels', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns all Submodels', 'operationId': 'GetAllSubmodels', 'parameters': [{'name': 'semanticId', 'in': 'query', 'description': 'The value of the semantic id reference (BASE64-URL-encoded)', 'schema': {'type': 'string'}}, {'name': 'idShort', 'in': 'query', 'description': 'The Submodel’s idShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodels', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Submodel'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodels/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/1/0/RC01']}, 'post': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new Submodel', 'operationId': 'PostSubmodel', 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels', substituted_url='/submodels', path_params=None, get_response_json=[{'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/1145_8090_6012_5097'}, 'idShort': 'Config'}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2110_9090_6012_8448'}, 'idShort': 'CalculatedAverages', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'GripperUpAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'GripperOpenAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'DistanceSensorAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateEntranceAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateMiddleAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateExitAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltForwardAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltBackwardAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'isRunningAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_greenAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_yellowAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_redAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltReadyAverage'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/5410_9090_6012_0950'}, 'idShort': 'DaySummary', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'string', 'idShort': 'JTS_data'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2402_1191_1022_1090something'}, 'idShort': 'ProducerRecommendations', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '4.1', 'valueType': 'float', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '16.2', 'valueType': 'float', 'idShort': 'ProcessDuration'}]}], get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2402_1191_1022_1090something'}, 'idShort': 'ProducerRecommendations', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '4.1', 'valueType': 'float', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '16.2', 'valueType': 'float', 'idShort': 'ProcessDuration'}]}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/submodels', 'post', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns all Submodels', 'operationId': 'GetAllSubmodels', 'parameters': [{'name': 'semanticId', 'in': 'query', 'description': 'The value of the semantic id reference (BASE64-URL-encoded)', 'schema': {'type': 'string'}}, {'name': 'idShort', 'in': 'query', 'description': 'The Submodel’s idShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodels', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Submodel'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodels/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/1/0/RC01']}, 'post': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new Submodel', 'operationId': 'PostSubmodel', 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels', substituted_url='/submodels', path_params=None, get_response_json=[{'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/1145_8090_6012_5097'}, 'idShort': 'Config'}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2110_9090_6012_8448'}, 'idShort': 'CalculatedAverages', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'GripperUpAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'GripperOpenAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'DistanceSensorAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateEntranceAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateMiddleAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateExitAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltForwardAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltBackwardAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'isRunningAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_greenAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_yellowAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_redAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltReadyAverage'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/5410_9090_6012_0950'}, 'idShort': 'DaySummary', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'string', 'idShort': 'JTS_data'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2402_1191_1022_1090something'}, 'idShort': 'ProducerRecommendations', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '4.1', 'valueType': 'float', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '16.2', 'valueType': 'float', 'idShort': 'ProcessDuration'}]}], get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2402_1191_1022_1090something'}, 'idShort': 'ProducerRecommendations', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '4.1', 'valueType': 'float', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '16.2', 'valueType': 'float', 'idShort': 'ProcessDuration'}]}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns a specific Submodel', 'operationId': 'GetSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelById/1/0/RC01']}, 'put': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new or updates an existing Submodel', 'operationId': 'PutSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}, '204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelById/1/0/RC01']}, 'delete': {'tags': ['Submodel Repository Interface'], 'summary': 'Deletes a Submodel', 'operationId': 'DeleteSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/submodels/{submodelIdentifier}', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns a specific Submodel', 'operationId': 'GetSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelById/1/0/RC01']}, 'put': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new or updates an existing Submodel', 'operationId': 'PutSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}, '204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelById/1/0/RC01']}, 'delete': {'tags': ['Submodel Repository Interface'], 'summary': 'Deletes a Submodel', 'operationId': 'DeleteSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}', substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path_params=None, get_response_json={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [200]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('/submodels/{submodelIdentifier}', 'put', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns a specific Submodel', 'operationId': 'GetSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelById/1/0/RC01']}, 'put': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new or updates an existing Submodel', 'operationId': 'PutSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}, '204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelById/1/0/RC01']}, 'delete': {'tags': ['Submodel Repository Interface'], 'summary': 'Deletes a Submodel', 'operationId': 'DeleteSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}', substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path_params=None, get_response_json={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), TypeError("'NoneType' object is not subscriptable"), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns the Submodel', 'operationId': 'GetSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodel/1/0/RC01']}, 'put': {'tags': ['Submodel Interface'], 'summary': 'Updates the Submodel', 'operationId': 'PutSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/submodels/{submodelIdentifier}/submodel', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns the Submodel', 'operationId': 'GetSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodel/1/0/RC01']}, 'put': {'tags': ['Submodel Interface'], 'summary': 'Updates the Submodel', 'operationId': 'PutSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel', substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel', path_params=None, get_response_json={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [200]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('/submodels/{submodelIdentifier}/submodel', 'put', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns the Submodel', 'operationId': 'GetSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodel/1/0/RC01']}, 'put': {'tags': ['Submodel Interface'], 'summary': 'Updates the Submodel', 'operationId': 'PutSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel', substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel', path_params=None, get_response_json={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/4445_8090_6012_7409'}, 'idShort': 'Status', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}]}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), TypeError("'NoneType' object is not subscriptable"), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns all submodel elements including their hierarchy', 'operationId': 'GetAllSubmodelElements', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'responses': {'200': {'description': 'List of found submodel elements', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelElement'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelElements/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelElementsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelElementsByParentPathAndSemanticId/1/0/RC01']}, 'post': {'tags': ['Submodel Interface'], 'summary': 'Creates a new submodel element', 'operationId': 'PostSubmodelElement', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel element created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelElement/1/0/RC01c']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/submodels/{submodelIdentifier}/submodel/submodel-elements', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns all submodel elements including their hierarchy', 'operationId': 'GetAllSubmodelElements', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'responses': {'200': {'description': 'List of found submodel elements', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelElement'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelElements/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelElementsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelElementsByParentPathAndSemanticId/1/0/RC01']}, 'post': {'tags': ['Submodel Interface'], 'summary': 'Creates a new submodel element', 'operationId': 'PostSubmodelElement', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel element created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelElement/1/0/RC01c']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements', substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements', path_params=None, get_response_json=[{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}], get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}, post_data={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}, patch_data=None, put_data=None, post_response=<Response [201]>, post_response_json={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [201]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=False, schema_conformation=False), '/submodels/{submodelIdentifier}/submodel/submodel-elements', 'post', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns all submodel elements including their hierarchy', 'operationId': 'GetAllSubmodelElements', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'responses': {'200': {'description': 'List of found submodel elements', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelElement'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelElements/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelElementsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelElementsByParentPathAndSemanticId/1/0/RC01']}, 'post': {'tags': ['Submodel Interface'], 'summary': 'Creates a new submodel element', 'operationId': 'PostSubmodelElement', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel element created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelElement/1/0/RC01c']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements', substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements', path_params=None, get_response_json=[{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '3', 'valueType': 'int', 'category': 'Variable', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '55', 'valueType': 'int', 'category': 'Variable', 'idShort': 'ProcessCounter'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '13.6', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ProcessDuration'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '40', 'valueType': 'int', 'category': 'Variable', 'idShort': 'RemainingProcesses'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperOpen'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'int', 'category': 'Variable', 'idShort': 'DistanceSensor'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateEntrance'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateMiddle'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LightGateExit'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltForward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltBackward'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'isRunning'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_green'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_yellow'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'LED_red'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}], get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}, post_data={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}, patch_data=None, put_data=None, post_response=<Response [201]>, post_response_json={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'ConveyorBeltReady'}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns a specific submodel element from the Submodel at a specified path', 'operationId': 'GetSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelElementByPath/1/0/RC01']}, 'put': {'tags': ['Submodel Interface'], 'summary': 'Updates an existing submodel element at a specified path within submodel elements hierarchy', 'operationId': 'PutSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel element updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelElementByPath/1/0/RC01c', 'https://admin-shell.io/aas/API/SetSubmodelElementValueByPath/1/0/RC01']}, 'post': {'tags': ['Submodel Interface'], 'summary': 'Creates a new submodel element at a specified path within submodel elements hierarchy', 'operationId': 'PostSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel element created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelElementByPath/1/0/RC01c']}, 'delete': {'tags': ['Submodel Interface'], 'summary': 'Deletes a submodel element at a specified path within the submodel elements hierarchy', 'operationId': 'DeleteSubmodelElementByPath', 'parameters': [{'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel element deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelElementByPath/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns a specific submodel element from the Submodel at a specified path', 'operationId': 'GetSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelElementByPath/1/0/RC01']}, 'put': {'tags': ['Submodel Interface'], 'summary': 'Updates an existing submodel element at a specified path within submodel elements hierarchy', 'operationId': 'PutSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel element updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelElementByPath/1/0/RC01c', 'https://admin-shell.io/aas/API/SetSubmodelElementValueByPath/1/0/RC01']}, 'post': {'tags': ['Submodel Interface'], 'summary': 'Creates a new submodel element at a specified path within submodel elements hierarchy', 'operationId': 'PostSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel element created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelElementByPath/1/0/RC01c']}, 'delete': {'tags': ['Submodel Interface'], 'summary': 'Deletes a submodel element at a specified path within the submodel elements hierarchy', 'operationId': 'DeleteSubmodelElementByPath', 'parameters': [{'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel element deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelElementByPath/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path_params=None, get_response_json={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, post_data={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, patch_data=None, put_data={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, post_response=<Response [201]>, post_response_json={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, put_response_json={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [200]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', 'put', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns a specific submodel element from the Submodel at a specified path', 'operationId': 'GetSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelElementByPath/1/0/RC01']}, 'put': {'tags': ['Submodel Interface'], 'summary': 'Updates an existing submodel element at a specified path within submodel elements hierarchy', 'operationId': 'PutSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel element updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelElementByPath/1/0/RC01c', 'https://admin-shell.io/aas/API/SetSubmodelElementValueByPath/1/0/RC01']}, 'post': {'tags': ['Submodel Interface'], 'summary': 'Creates a new submodel element at a specified path within submodel elements hierarchy', 'operationId': 'PostSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel element created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelElementByPath/1/0/RC01c']}, 'delete': {'tags': ['Submodel Interface'], 'summary': 'Deletes a submodel element at a specified path within the submodel elements hierarchy', 'operationId': 'DeleteSubmodelElementByPath', 'parameters': [{'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel element deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelElementByPath/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path_params=None, get_response_json={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, post_data={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, patch_data=None, put_data={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, post_response=<Response [201]>, post_response_json={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, put_response_json={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), TypeError("'NoneType' object is not subscriptable"), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [201]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=False, schema_conformation=False), '/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', 'post', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns a specific submodel element from the Submodel at a specified path', 'operationId': 'GetSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelElementByPath/1/0/RC01']}, 'put': {'tags': ['Submodel Interface'], 'summary': 'Updates an existing submodel element at a specified path within submodel elements hierarchy', 'operationId': 'PutSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel element updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelElementByPath/1/0/RC01c', 'https://admin-shell.io/aas/API/SetSubmodelElementValueByPath/1/0/RC01']}, 'post': {'tags': ['Submodel Interface'], 'summary': 'Creates a new submodel element at a specified path within submodel elements hierarchy', 'operationId': 'PostSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel element created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelElementByPath/1/0/RC01c']}, 'delete': {'tags': ['Submodel Interface'], 'summary': 'Deletes a submodel element at a specified path within the submodel elements hierarchy', 'operationId': 'DeleteSubmodelElementByPath', 'parameters': [{'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel element deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelElementByPath/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path_params=None, get_response_json={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, post_data={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, patch_data=None, put_data={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, post_response=<Response [201]>, post_response_json={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, put_response_json={'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'boolean', 'category': 'Variable', 'idShort': 'GripperUp'}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}/invoke', 'post', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'post': {'tags': ['Submodel Interface'], 'summary': 'Synchronously or asynchronously invokes an Operation at a specified path', 'operationId': 'InvokeOperation', 'parameters': [{'name': 'async', 'in': 'query', 'description': 'Determines whether an operation invocation is performed asynchronously or synchronously', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'boolean', 'default': False}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated), in this case an operation', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Operation request object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/OperationRequest'}}}, 'required': True}, 'responses': {'200': {'description': 'Operation result object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/OperationResult'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/InvokeOperationSync/1/0/RC01', 'https://admin-shell.io/aas/API/InvokeOperationAsync/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}/invoke', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns the Operation result of an asynchronous invoked Operation', 'operationId': 'GetOperationAsyncResult', 'parameters': [{'name': 'content', 'in': 'query', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'value']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated), in this case an operation', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'handleId', 'in': 'path', 'description': 'The returned handle id of an operation’s asynchronous invocation used to request the current state of the operation’s execution (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Operation result object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/OperationResult'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetOperationAsyncResult/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}/operation-results/{handleId}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete')]), <Response [400]>), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}/operation-results/{handleId}', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns the Operation result of an asynchronous invoked Operation', 'operationId': 'GetOperationAsyncResult', 'parameters': [{'name': 'content', 'in': 'query', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'value']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated), in this case an operation', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'handleId', 'in': 'path', 'description': 'The returned handle id of an operation’s asynchronous invocation used to request the current state of the operation’s execution (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Operation result object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/OperationResult'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetOperationAsyncResult/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}/operation-results/{handleId}', substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp/operation-results/{handleId}', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:21.533+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:21.533+00:00'}]}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns all Asset Administration Shell Descriptors', 'operationId': 'GetAllAssetAdministrationShellDescriptors', 'responses': {'200': {'description': 'Requested Asset Administration Shell Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, '404': {'description': 'Requested Asset Administration Shell Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShellDescriptors/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Creates a new Asset Administration Shell Descriptor, i.e. registers an AAS', 'operationId': 'PostAssetAdministrationShellDescriptor', 'requestBody': {'description': 'Asset Administration Shell Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShellDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/shell-descriptors', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete')]), <Response [400]>), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns all Asset Administration Shell Descriptors', 'operationId': 'GetAllAssetAdministrationShellDescriptors', 'responses': {'200': {'description': 'Requested Asset Administration Shell Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, '404': {'description': 'Requested Asset Administration Shell Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShellDescriptors/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Creates a new Asset Administration Shell Descriptor, i.e. registers an AAS', 'operationId': 'PostAssetAdministrationShellDescriptor', 'requestBody': {'description': 'Asset Administration Shell Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShellDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/shell-descriptors', substituted_url='/registry/shell-descriptors', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:21.649+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:21.649+00:00'}]}, post_data={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:21.649+00:00'}]}, patch_data=None, put_data=None, post_response=<Response [400]>, post_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:21.664+00:00'}]}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors', 'post', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns all Asset Administration Shell Descriptors', 'operationId': 'GetAllAssetAdministrationShellDescriptors', 'responses': {'200': {'description': 'Requested Asset Administration Shell Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, '404': {'description': 'Requested Asset Administration Shell Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShellDescriptors/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Creates a new Asset Administration Shell Descriptor, i.e. registers an AAS', 'operationId': 'PostAssetAdministrationShellDescriptor', 'requestBody': {'description': 'Asset Administration Shell Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShellDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/shell-descriptors', substituted_url='/registry/shell-descriptors', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:21.649+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:21.649+00:00'}]}, post_data={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:21.649+00:00'}]}, patch_data=None, put_data=None, post_response=<Response [400]>, post_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:21.664+00:00'}]}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns a specific Asset Administration Shell Descriptor', 'operationId': 'GetAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellDescriptorById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Updates an existing Asset Administration Shell Descriptor', 'operationId': 'PutAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Deletes an Asset Administration Shell Descriptor, i.e. de-registers an AAS', 'operationId': 'DeleteAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete')]), <Response [400]>), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors/{aasIdentifier}', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns a specific Asset Administration Shell Descriptor', 'operationId': 'GetAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellDescriptorById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Updates an existing Asset Administration Shell Descriptor', 'operationId': 'PutAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Deletes an Asset Administration Shell Descriptor, i.e. de-registers an AAS', 'operationId': 'DeleteAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}', substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI='", 'code': '', 'timestamp': '2022-10-22T18:09:21.874+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI='", 'code': '', 'timestamp': '2022-10-22T18:09:21.874+00:00'}]}, post_data=None, patch_data=None, put_data={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI='", 'code': '', 'timestamp': '2022-10-22T18:09:21.874+00:00'}]}, post_response=None, post_response_json=None, put_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI='", 'code': '', 'timestamp': '2022-10-22T18:09:21.890+00:00'}]}, put_response=<Response [400]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors/{aasIdentifier}', 'put', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns a specific Asset Administration Shell Descriptor', 'operationId': 'GetAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellDescriptorById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Updates an existing Asset Administration Shell Descriptor', 'operationId': 'PutAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Deletes an Asset Administration Shell Descriptor, i.e. de-registers an AAS', 'operationId': 'DeleteAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}', substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI='", 'code': '', 'timestamp': '2022-10-22T18:09:21.874+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI='", 'code': '', 'timestamp': '2022-10-22T18:09:21.874+00:00'}]}, post_data=None, patch_data=None, put_data={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI='", 'code': '', 'timestamp': '2022-10-22T18:09:21.874+00:00'}]}, post_response=None, post_response_json=None, put_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI='", 'code': '', 'timestamp': '2022-10-22T18:09:21.890+00:00'}]}, put_response=<Response [400]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns all Submodel Descriptors', 'operationId': 'GetAllSubmodelDescriptors_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Creates a new Submodel Descriptor, i.e. registers a submodel', 'operationId': 'PostSubmodelDescriptor_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete')]), <Response [400]>), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns all Submodel Descriptors', 'operationId': 'GetAllSubmodelDescriptors_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Creates a new Submodel Descriptor, i.e. registers a submodel', 'operationId': 'PostSubmodelDescriptor_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors', substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:22.089+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:22.089+00:00'}]}, post_data={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:22.089+00:00'}]}, patch_data=None, put_data=None, post_response=<Response [400]>, post_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:22.104+00:00'}]}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors', 'post', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns all Submodel Descriptors', 'operationId': 'GetAllSubmodelDescriptors_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Creates a new Submodel Descriptor, i.e. registers a submodel', 'operationId': 'PostSubmodelDescriptor_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors', substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:22.089+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:22.089+00:00'}]}, post_data={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:22.089+00:00'}]}, patch_data=None, put_data=None, post_response=<Response [400]>, post_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:22.104+00:00'}]}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns a specific Submodel Descriptor', 'operationId': 'GetSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelDescriptorById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Updates an existing Submodel Descriptor', 'operationId': 'PutSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Deletes a Submodel Descriptor, i.e. de-registers a submodel', 'operationId': 'DeleteSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete')]), <Response [400]>), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns a specific Submodel Descriptor', 'operationId': 'GetSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelDescriptorById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Updates an existing Submodel Descriptor', 'operationId': 'PutSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Deletes a Submodel Descriptor, i.e. de-registers a submodel', 'operationId': 'DeleteSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:22.483+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:22.483+00:00'}]}, post_data=None, patch_data=None, put_data={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:22.483+00:00'}]}, post_response=None, post_response_json=None, put_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:22.496+00:00'}]}, put_response=<Response [400]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', 'put', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns a specific Submodel Descriptor', 'operationId': 'GetSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelDescriptorById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Updates an existing Submodel Descriptor', 'operationId': 'PutSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Deletes a Submodel Descriptor, i.e. de-registers a submodel', 'operationId': 'DeleteSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:22.483+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:22.483+00:00'}]}, post_data=None, patch_data=None, put_data={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:22.483+00:00'}]}, post_response=None, post_response_json=None, put_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:22.496+00:00'}]}, put_response=<Response [400]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Registry Interface'], 'summary': 'Returns all Submodel Descriptors', 'operationId': 'GetAllSubmodelDescriptors', 'responses': {'200': {'description': 'Requested Submodel Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/1/0/RC01']}, 'post': {'tags': ['Submodel Registry Interface'], 'summary': 'Creates a new Submodel Descriptor, i.e. registers a submodel', 'operationId': 'PostSubmodelDescriptor', 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/submodel-descriptors', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete')]), <Response [400]>), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/registry/submodel-descriptors', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Registry Interface'], 'summary': 'Returns all Submodel Descriptors', 'operationId': 'GetAllSubmodelDescriptors', 'responses': {'200': {'description': 'Requested Submodel Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/1/0/RC01']}, 'post': {'tags': ['Submodel Registry Interface'], 'summary': 'Creates a new Submodel Descriptor, i.e. registers a submodel', 'operationId': 'PostSubmodelDescriptor', 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/submodel-descriptors', substituted_url='/registry/submodel-descriptors', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:22.572+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:22.572+00:00'}]}, post_data={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:22.572+00:00'}]}, patch_data=None, put_data=None, post_response=<Response [400]>, post_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:22.583+00:00'}]}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/registry/submodel-descriptors', 'post', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Registry Interface'], 'summary': 'Returns all Submodel Descriptors', 'operationId': 'GetAllSubmodelDescriptors', 'responses': {'200': {'description': 'Requested Submodel Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/1/0/RC01']}, 'post': {'tags': ['Submodel Registry Interface'], 'summary': 'Creates a new Submodel Descriptor, i.e. registers a submodel', 'operationId': 'PostSubmodelDescriptor', 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/submodel-descriptors', substituted_url='/registry/submodel-descriptors', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:22.572+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:22.572+00:00'}]}, post_data={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:22.572+00:00'}]}, patch_data=None, put_data=None, post_response=<Response [400]>, post_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:22.583+00:00'}]}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Registry Interface'], 'summary': 'Returns a specific Submodel Descriptor', 'operationId': 'GetSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelDescriptorById/1/0/RC01']}, 'put': {'tags': ['Submodel Registry Interface'], 'summary': 'Updates an existing Submodel Descriptor', 'operationId': 'PutSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Submodel Registry Interface'], 'summary': 'Deletes a Submodel Descriptor, i.e. de-registers a submodel', 'operationId': 'DeleteSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/submodel-descriptors/{submodelIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete')]), <Response [400]>), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/registry/submodel-descriptors/{submodelIdentifier}', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Registry Interface'], 'summary': 'Returns a specific Submodel Descriptor', 'operationId': 'GetSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelDescriptorById/1/0/RC01']}, 'put': {'tags': ['Submodel Registry Interface'], 'summary': 'Updates an existing Submodel Descriptor', 'operationId': 'PutSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Submodel Registry Interface'], 'summary': 'Deletes a Submodel Descriptor, i.e. de-registers a submodel', 'operationId': 'DeleteSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/submodel-descriptors/{submodelIdentifier}', substituted_url='/registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:22.892+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:22.892+00:00'}]}, post_data=None, patch_data=None, put_data={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:22.892+00:00'}]}, post_response=None, post_response_json=None, put_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:22.909+00:00'}]}, put_response=<Response [400]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/registry/submodel-descriptors/{submodelIdentifier}', 'put', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Registry Interface'], 'summary': 'Returns a specific Submodel Descriptor', 'operationId': 'GetSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelDescriptorById/1/0/RC01']}, 'put': {'tags': ['Submodel Registry Interface'], 'summary': 'Updates an existing Submodel Descriptor', 'operationId': 'PutSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Submodel Registry Interface'], 'summary': 'Deletes a Submodel Descriptor, i.e. de-registers a submodel', 'operationId': 'DeleteSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/registry/submodel-descriptors/{submodelIdentifier}', substituted_url='/registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:22.892+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:22.892+00:00'}]}, post_data=None, patch_data=None, put_data={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:22.892+00:00'}]}, post_response=None, post_response_json=None, put_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:22.909+00:00'}]}, put_response=<Response [400]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Concept Description Repository Interface'], 'summary': 'Returns all Concept Descriptions', 'operationId': 'GetAllConceptDescriptions', 'parameters': [{'name': 'idShort', 'in': 'query', 'description': 'The Concept Description’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}, {'name': 'isCaseOf', 'in': 'query', 'description': 'IsCaseOf reference (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}, {'name': 'dataSpecificationRef', 'in': 'query', 'description': 'DataSpecification reference (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Concept Descriptions', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/ConceptDescription'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllConceptDescriptions/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByIdShort/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByIsCaseOf/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByDataSpecificationReference/1/0/RC01']}, 'post': {'tags': ['Concept Description Repository Interface'], 'summary': 'Creates a new Concept Description', 'operationId': 'PostConceptDescription', 'requestBody': {'description': 'Concept Description object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}, 'required': True}, 'responses': {'201': {'description': 'Concept Description created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostConceptDescription/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/concept-descriptions', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/concept-descriptions', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Concept Description Repository Interface'], 'summary': 'Returns all Concept Descriptions', 'operationId': 'GetAllConceptDescriptions', 'parameters': [{'name': 'idShort', 'in': 'query', 'description': 'The Concept Description’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}, {'name': 'isCaseOf', 'in': 'query', 'description': 'IsCaseOf reference (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}, {'name': 'dataSpecificationRef', 'in': 'query', 'description': 'DataSpecification reference (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Concept Descriptions', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/ConceptDescription'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllConceptDescriptions/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByIdShort/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByIsCaseOf/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByDataSpecificationReference/1/0/RC01']}, 'post': {'tags': ['Concept Description Repository Interface'], 'summary': 'Creates a new Concept Description', 'operationId': 'PostConceptDescription', 'requestBody': {'description': 'Concept Description object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}, 'required': True}, 'responses': {'201': {'description': 'Concept Description created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostConceptDescription/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/concept-descriptions', substituted_url='/concept-descriptions', path_params=None, get_response_json=[{'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescriptionsomething'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}], get_response=<Response [200]>, single_get_response={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescriptionsomething'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/concept-descriptions', 'post', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Concept Description Repository Interface'], 'summary': 'Returns all Concept Descriptions', 'operationId': 'GetAllConceptDescriptions', 'parameters': [{'name': 'idShort', 'in': 'query', 'description': 'The Concept Description’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}, {'name': 'isCaseOf', 'in': 'query', 'description': 'IsCaseOf reference (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}, {'name': 'dataSpecificationRef', 'in': 'query', 'description': 'DataSpecification reference (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Concept Descriptions', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/ConceptDescription'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllConceptDescriptions/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByIdShort/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByIsCaseOf/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByDataSpecificationReference/1/0/RC01']}, 'post': {'tags': ['Concept Description Repository Interface'], 'summary': 'Creates a new Concept Description', 'operationId': 'PostConceptDescription', 'requestBody': {'description': 'Concept Description object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}, 'required': True}, 'responses': {'201': {'description': 'Concept Description created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostConceptDescription/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/concept-descriptions', substituted_url='/concept-descriptions', path_params=None, get_response_json=[{'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescriptionsomething'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}], get_response=<Response [200]>, single_get_response={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescriptionsomething'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Concept Description Repository Interface'], 'summary': 'Returns a specific Concept Description', 'operationId': 'GetConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Concept Description', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetConceptDescriptionById/1/0/RC01']}, 'put': {'tags': ['Concept Description Repository Interface'], 'summary': 'Updates an existing Concept Description', 'operationId': 'PutConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Concept Description object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}, 'required': True}, 'responses': {'204': {'description': 'Concept Description updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutConceptDescriptionById/1/0/RC01']}, 'delete': {'tags': ['Concept Description Repository Interface'], 'summary': 'Deletes a Concept Description', 'operationId': 'DeleteConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Concept Description deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteConceptDescriptionById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/concept-descriptions/{cdIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/concept-descriptions/{cdIdentifier}', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Concept Description Repository Interface'], 'summary': 'Returns a specific Concept Description', 'operationId': 'GetConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Concept Description', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetConceptDescriptionById/1/0/RC01']}, 'put': {'tags': ['Concept Description Repository Interface'], 'summary': 'Updates an existing Concept Description', 'operationId': 'PutConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Concept Description object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}, 'required': True}, 'responses': {'204': {'description': 'Concept Description updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutConceptDescriptionById/1/0/RC01']}, 'delete': {'tags': ['Concept Description Repository Interface'], 'summary': 'Deletes a Concept Description', 'operationId': 'DeleteConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Concept Description deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteConceptDescriptionById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/concept-descriptions/{cdIdentifier}', substituted_url='/concept-descriptions/aHR0cHM6Ly9hY3BsdC5vcmcvVGVzdF9Db25jZXB0RGVzY3JpcHRpb24=', path_params=None, get_response_json={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [200]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('/concept-descriptions/{cdIdentifier}', 'put', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Concept Description Repository Interface'], 'summary': 'Returns a specific Concept Description', 'operationId': 'GetConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Concept Description', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetConceptDescriptionById/1/0/RC01']}, 'put': {'tags': ['Concept Description Repository Interface'], 'summary': 'Updates an existing Concept Description', 'operationId': 'PutConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Concept Description object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}, 'required': True}, 'responses': {'204': {'description': 'Concept Description updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutConceptDescriptionById/1/0/RC01']}, 'delete': {'tags': ['Concept Description Repository Interface'], 'summary': 'Deletes a Concept Description', 'operationId': 'DeleteConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Concept Description deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteConceptDescriptionById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/concept-descriptions/{cdIdentifier}', substituted_url='/concept-descriptions/aHR0cHM6Ly9hY3BsdC5vcmcvVGVzdF9Db25jZXB0RGVzY3JpcHRpb24=', path_params=None, get_response_json={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}, get_response=<Response [200]>, single_get_response={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}, post_data=None, patch_data=None, put_data={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}, post_response=None, post_response_json=None, put_response_json={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}, put_response=<Response [200]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), TypeError("'NoneType' object is not subscriptable"), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['AASX File Server Interface'], 'summary': 'Returns a list of available AASX packages at the server', 'operationId': 'GetAllAASXPackageIds', 'parameters': [{'name': 'aasId', 'in': 'query', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested package list', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/PackageDescription'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAASXPackageIds/1/0/RC01']}, 'post': {'tags': ['AASX File Server Interface'], 'summary': 'Stores the AASX package at the server', 'operationId': 'PostAASXPackage', 'requestBody': {'description': 'AASX package', 'content': {'multipart/form-data': {'schema': {'$ref': '#/components/schemas/packages_body'}, 'encoding': {'file': {'contentType': 'application/asset-administration-shell-package', 'style': 'form'}}}}, 'required': True}, 'responses': {'201': {'description': 'AASX package stored successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PackageDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAASXPackage/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/packages', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/concept-descriptions/aHR0cHM6Ly9hY3BsdC5vcmcvVGVzdF9Db25jZXB0RGVzY3JpcHRpb24=', path='/concept-descriptions/{cdIdentifier}', operation='delete')]), <Response [405]>), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/packages', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['AASX File Server Interface'], 'summary': 'Returns a list of available AASX packages at the server', 'operationId': 'GetAllAASXPackageIds', 'parameters': [{'name': 'aasId', 'in': 'query', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested package list', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/PackageDescription'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAASXPackageIds/1/0/RC01']}, 'post': {'tags': ['AASX File Server Interface'], 'summary': 'Stores the AASX package at the server', 'operationId': 'PostAASXPackage', 'requestBody': {'description': 'AASX package', 'content': {'multipart/form-data': {'schema': {'$ref': '#/components/schemas/packages_body'}, 'encoding': {'file': {'contentType': 'application/asset-administration-shell-package', 'style': 'form'}}}}, 'required': True}, 'responses': {'201': {'description': 'AASX package stored successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PackageDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAASXPackage/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/packages', substituted_url='/packages', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "method 'GET' not allowed for URL 'packages' (allowed methods: POST)", 'code': '', 'timestamp': '2022-10-22T18:09:23.232+00:00'}]}, get_response=<Response [405]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "method 'GET' not allowed for URL 'packages' (allowed methods: POST)", 'code': '', 'timestamp': '2022-10-22T18:09:23.232+00:00'}]}, post_data={'success': False, 'messages': [{'messageType': 'Error', 'text': "method 'GET' not allowed for URL 'packages' (allowed methods: POST)", 'code': '', 'timestamp': '2022-10-22T18:09:23.232+00:00'}]}, patch_data=None, put_data=None, post_response=<Response [400]>, post_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'PostAASXPackage currently not supported', 'code': '', 'timestamp': '2022-10-22T18:09:23.256+00:00'}]}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/packages', 'post', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['AASX File Server Interface'], 'summary': 'Returns a list of available AASX packages at the server', 'operationId': 'GetAllAASXPackageIds', 'parameters': [{'name': 'aasId', 'in': 'query', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested package list', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/PackageDescription'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAASXPackageIds/1/0/RC01']}, 'post': {'tags': ['AASX File Server Interface'], 'summary': 'Stores the AASX package at the server', 'operationId': 'PostAASXPackage', 'requestBody': {'description': 'AASX package', 'content': {'multipart/form-data': {'schema': {'$ref': '#/components/schemas/packages_body'}, 'encoding': {'file': {'contentType': 'application/asset-administration-shell-package', 'style': 'form'}}}}, 'required': True}, 'responses': {'201': {'description': 'AASX package stored successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PackageDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAASXPackage/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/packages', substituted_url='/packages', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "method 'GET' not allowed for URL 'packages' (allowed methods: POST)", 'code': '', 'timestamp': '2022-10-22T18:09:23.232+00:00'}]}, get_response=<Response [405]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "method 'GET' not allowed for URL 'packages' (allowed methods: POST)", 'code': '', 'timestamp': '2022-10-22T18:09:23.232+00:00'}]}, post_data={'success': False, 'messages': [{'messageType': 'Error', 'text': "method 'GET' not allowed for URL 'packages' (allowed methods: POST)", 'code': '', 'timestamp': '2022-10-22T18:09:23.232+00:00'}]}, patch_data=None, put_data=None, post_response=<Response [400]>, post_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'PostAASXPackage currently not supported', 'code': '', 'timestamp': '2022-10-22T18:09:23.256+00:00'}]}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['AASX File Server Interface'], 'summary': 'Returns a specific AASX package from the server', 'operationId': 'GetAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested AASX package', 'headers': {'X-FileName': {'description': 'Filename of the package', 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}}, 'content': {'application/asset-administration-shell-package': {'schema': {'type': 'string', 'format': 'binary'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAASXByPackageId/1/0/RC01']}, 'put': {'tags': ['AASX File Server Interface'], 'summary': 'Updates the AASX package at the server', 'operationId': 'PutAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The Package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'AASX package', 'content': {'multipart/form-data': {'schema': {'$ref': '#/components/schemas/packages_packageId_body'}, 'encoding': {'file': {'contentType': 'application/asset-administration-shell-package', 'style': 'form'}}}}, 'required': True}, 'responses': {'204': {'description': 'AASX package updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAASXByPackageId/1/0/RC01']}, 'delete': {'tags': ['AASX File Server Interface'], 'summary': 'Deletes a specific AASX package from the server', 'operationId': 'DeleteAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The Package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAASXByPackageId/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/packages/{packageId}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/concept-descriptions/aHR0cHM6Ly9hY3BsdC5vcmcvVGVzdF9Db25jZXB0RGVzY3JpcHRpb24=', path='/concept-descriptions/{cdIdentifier}', operation='delete')]), <Response [500]>), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/packages/{packageId}', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['AASX File Server Interface'], 'summary': 'Returns a specific AASX package from the server', 'operationId': 'GetAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested AASX package', 'headers': {'X-FileName': {'description': 'Filename of the package', 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}}, 'content': {'application/asset-administration-shell-package': {'schema': {'type': 'string', 'format': 'binary'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAASXByPackageId/1/0/RC01']}, 'put': {'tags': ['AASX File Server Interface'], 'summary': 'Updates the AASX package at the server', 'operationId': 'PutAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The Package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'AASX package', 'content': {'multipart/form-data': {'schema': {'$ref': '#/components/schemas/packages_packageId_body'}, 'encoding': {'file': {'contentType': 'application/asset-administration-shell-package', 'style': 'form'}}}}, 'required': True}, 'responses': {'204': {'description': 'AASX package updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAASXByPackageId/1/0/RC01']}, 'delete': {'tags': ['AASX File Server Interface'], 'summary': 'Deletes a specific AASX package from the server', 'operationId': 'DeleteAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The Package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAASXByPackageId/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/packages/{packageId}', substituted_url='/packages/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Exception', 'text': 'no handler defined for this request', 'code': '', 'timestamp': '2022-10-22T18:09:23.354+00:00'}]}, get_response=<Response [500]>, single_get_response={'success': False, 'messages': [{'messageType': 'Exception', 'text': 'no handler defined for this request', 'code': '', 'timestamp': '2022-10-22T18:09:23.354+00:00'}]}, post_data=None, patch_data=None, put_data={'success': False, 'messages': [{'messageType': 'Exception', 'text': 'no handler defined for this request', 'code': '', 'timestamp': '2022-10-22T18:09:23.354+00:00'}]}, post_response=None, post_response_json=None, put_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'PutAASXPackageById currently not supported', 'code': '', 'timestamp': '2022-10-22T18:09:23.373+00:00'}]}, put_response=<Response [400]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/packages/{packageId}', 'put', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['AASX File Server Interface'], 'summary': 'Returns a specific AASX package from the server', 'operationId': 'GetAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested AASX package', 'headers': {'X-FileName': {'description': 'Filename of the package', 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}}, 'content': {'application/asset-administration-shell-package': {'schema': {'type': 'string', 'format': 'binary'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAASXByPackageId/1/0/RC01']}, 'put': {'tags': ['AASX File Server Interface'], 'summary': 'Updates the AASX package at the server', 'operationId': 'PutAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The Package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'AASX package', 'content': {'multipart/form-data': {'schema': {'$ref': '#/components/schemas/packages_packageId_body'}, 'encoding': {'file': {'contentType': 'application/asset-administration-shell-package', 'style': 'form'}}}}, 'required': True}, 'responses': {'204': {'description': 'AASX package updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAASXByPackageId/1/0/RC01']}, 'delete': {'tags': ['AASX File Server Interface'], 'summary': 'Deletes a specific AASX package from the server', 'operationId': 'DeleteAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The Package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAASXByPackageId/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/packages/{packageId}', substituted_url='/packages/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Exception', 'text': 'no handler defined for this request', 'code': '', 'timestamp': '2022-10-22T18:09:23.354+00:00'}]}, get_response=<Response [500]>, single_get_response={'success': False, 'messages': [{'messageType': 'Exception', 'text': 'no handler defined for this request', 'code': '', 'timestamp': '2022-10-22T18:09:23.354+00:00'}]}, post_data=None, patch_data=None, put_data={'success': False, 'messages': [{'messageType': 'Exception', 'text': 'no handler defined for this request', 'code': '', 'timestamp': '2022-10-22T18:09:23.354+00:00'}]}, post_response=None, post_response_json=None, put_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'PutAASXPackageById currently not supported', 'code': '', 'timestamp': '2022-10-22T18:09:23.373+00:00'}]}, put_response=<Response [400]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Serialization Interface'], 'summary': 'Returns an appropriate serialization based on the specified format (see SerializationFormat)', 'operationId': 'GenerateSerializationByIds', 'parameters': [{'name': 'aasIds', 'in': 'query', 'description': "The Asset Administration Shells' unique ids (BASE64-URL-encoded)", 'required': True, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Identifier'}}}, {'name': 'submodelIds', 'in': 'query', 'description': "The Submodels' unique ids (BASE64-URL-encoded)", 'required': True, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Identifier'}}}, {'name': 'includeConceptDescriptions', 'in': 'query', 'description': 'Include Concept Descriptions?', 'required': True, 'style': 'form', 'explode': True, 'schema': {'type': 'boolean', 'default': True}}], 'responses': {'200': {'description': 'Requested serialization based on SerializationFormat', 'content': {'application/asset-administration-shell-package+xml': {'schema': {'type': 'string', 'description': 'AASX package', 'format': 'binary'}}, 'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellEnvironment'}}, 'application/xml': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellEnvironment'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GenerateSerializationByIds/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/serialization', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/concept-descriptions/aHR0cHM6Ly9hY3BsdC5vcmcvVGVzdF9Db25jZXB0RGVzY3JpcHRpb24=', path='/concept-descriptions/{cdIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/packages/bm90X2F2YWlsYWJsZQ==', path='/packages/{packageId}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/serialization', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Serialization Interface'], 'summary': 'Returns an appropriate serialization based on the specified format (see SerializationFormat)', 'operationId': 'GenerateSerializationByIds', 'parameters': [{'name': 'aasIds', 'in': 'query', 'description': "The Asset Administration Shells' unique ids (BASE64-URL-encoded)", 'required': True, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Identifier'}}}, {'name': 'submodelIds', 'in': 'query', 'description': "The Submodels' unique ids (BASE64-URL-encoded)", 'required': True, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Identifier'}}}, {'name': 'includeConceptDescriptions', 'in': 'query', 'description': 'Include Concept Descriptions?', 'required': True, 'style': 'form', 'explode': True, 'schema': {'type': 'boolean', 'default': True}}], 'responses': {'200': {'description': 'Requested serialization based on SerializationFormat', 'content': {'application/asset-administration-shell-package+xml': {'schema': {'type': 'string', 'description': 'AASX package', 'format': 'binary'}}, 'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellEnvironment'}}, 'application/xml': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellEnvironment'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GenerateSerializationByIds/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/serialization', substituted_url='/serialization', path_params=None, get_response_json={'assetAdministrationShells': [], 'conceptDescriptions': [], 'submodels': []}, get_response=<Response [200]>, single_get_response={'assetAdministrationShells': [], 'conceptDescriptions': [], 'submodels': []}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Returns a list of Asset Administration Shell ids based on Asset identifier key-value-pairs', 'operationId': 'GetAllAssetAdministrationShellIdsByAssetLink', 'parameters': [{'name': 'assetIds', 'in': 'query', 'description': 'The key-value-pair of an Asset identifier', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'example': '[{"key": "globalAssetId","value": "http://example.company/myAsset"},{"key": "myOwnInternalAssetId","value": "12345ABC"}]', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell ids', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Identifier'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShellIdsByAssetLink/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/lookup/shells', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/concept-descriptions/aHR0cHM6Ly9hY3BsdC5vcmcvVGVzdF9Db25jZXB0RGVzY3JpcHRpb24=', path='/concept-descriptions/{cdIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/packages/bm90X2F2YWlsYWJsZQ==', path='/packages/{packageId}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/lookup/shells', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Returns a list of Asset Administration Shell ids based on Asset identifier key-value-pairs', 'operationId': 'GetAllAssetAdministrationShellIdsByAssetLink', 'parameters': [{'name': 'assetIds', 'in': 'query', 'description': 'The key-value-pair of an Asset identifier', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'example': '[{"key": "globalAssetId","value": "http://example.company/myAsset"},{"key": "myOwnInternalAssetId","value": "12345ABC"}]', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell ids', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Identifier'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShellIdsByAssetLink/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/lookup/shells', substituted_url='/lookup/shells', path_params=None, get_response_json=[{'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}], get_response=<Response [200]>, single_get_response={'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Returns a list of Asset identifier key-value-pairs based on an Asset Administration Shell id to edit discoverable content', 'operationId': 'GetAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset identifier key-value-pairs', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetLinksById/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Creates all Asset identifier key-value-pair linked to an Asset Administration Shell to edit discoverable content', 'operationId': 'PostAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset identifier key-value-pairs', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}, 'required': True}, 'responses': {'201': {'description': 'Asset identifier key-value-pairs created successfully', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAllAssetLinksById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Deletes all Asset identifier key-value-pair linked to an Asset Administration Shell to edit discoverable content', 'operationId': 'DeleteAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset identifier key-value-pairs deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAllAssetLinksById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/lookup/shells/{aasIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/concept-descriptions/aHR0cHM6Ly9hY3BsdC5vcmcvVGVzdF9Db25jZXB0RGVzY3JpcHRpb24=', path='/concept-descriptions/{cdIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/packages/bm90X2F2YWlsYWJsZQ==', path='/packages/{packageId}', operation='delete')]), <Response [200]>), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=True, schema_conformation=True), '/lookup/shells/{aasIdentifier}', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Returns a list of Asset identifier key-value-pairs based on an Asset Administration Shell id to edit discoverable content', 'operationId': 'GetAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset identifier key-value-pairs', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetLinksById/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Creates all Asset identifier key-value-pair linked to an Asset Administration Shell to edit discoverable content', 'operationId': 'PostAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset identifier key-value-pairs', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}, 'required': True}, 'responses': {'201': {'description': 'Asset identifier key-value-pairs created successfully', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAllAssetLinksById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Deletes all Asset identifier key-value-pair linked to an Asset Administration Shell to edit discoverable content', 'operationId': 'DeleteAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset identifier key-value-pairs deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAllAssetLinksById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/lookup/shells/{aasIdentifier}', substituted_url='/lookup/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path_params=None, get_response_json=[{'key': 'globalAssetId', 'value': 'https://acplt.org/Test_Asset', 'subjectId': None}], get_response=<Response [200]>, single_get_response={'key': 'globalAssetId', 'value': 'https://acplt.org/Test_Asset', 'subjectId': None}, post_data={'key': 'globalAssetId', 'value': 'https://acplt.org/Test_Asset', 'subjectId': None}, patch_data=None, put_data=None, post_response=<Response [500]>, post_response_json={'success': False, 'messages': [{'messageType': 'Exception', 'code': '', 'timestamp': '2022-10-22T18:09:23.884+00:00'}]}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [500]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/lookup/shells/{aasIdentifier}', 'post', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [{'idType': 'Iri', 'type': 'Asset', 'value': 'https://acplt.org/Test_Asset'}]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Returns a list of Asset identifier key-value-pairs based on an Asset Administration Shell id to edit discoverable content', 'operationId': 'GetAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset identifier key-value-pairs', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetLinksById/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Creates all Asset identifier key-value-pair linked to an Asset Administration Shell to edit discoverable content', 'operationId': 'PostAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset identifier key-value-pairs', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}, 'required': True}, 'responses': {'201': {'description': 'Asset identifier key-value-pairs created successfully', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAllAssetLinksById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Deletes all Asset identifier key-value-pair linked to an Asset Administration Shell to edit discoverable content', 'operationId': 'DeleteAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset identifier key-value-pairs deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAllAssetLinksById/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/lookup/shells/{aasIdentifier}', substituted_url='/lookup/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path_params=None, get_response_json=[{'key': 'globalAssetId', 'value': 'https://acplt.org/Test_Asset', 'subjectId': None}], get_response=<Response [200]>, single_get_response={'key': 'globalAssetId', 'value': 'https://acplt.org/Test_Asset', 'subjectId': None}, post_data={'key': 'globalAssetId', 'value': 'https://acplt.org/Test_Asset', 'subjectId': None}, patch_data=None, put_data=None, post_response=<Response [500]>, post_response_json={'success': False, 'messages': [{'messageType': 'Exception', 'code': '', 'timestamp': '2022-10-22T18:09:23.884+00:00'}]}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [None]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Descriptor Interface'], 'summary': 'Returns the self-describing information of a network resource (Descriptor)', 'operationId': 'GetDescriptor', 'responses': {'200': {'description': 'Requested Descriptor', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Descriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/Descriptor/GetDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/descriptor', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.positive_tests.endpoints_preparation.positive_test.PreparePPDPositive'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/concept-descriptions/aHR0cHM6Ly9hY3BsdC5vcmcvVGVzdF9Db25jZXB0RGVzY3JpcHRpb24=', path='/concept-descriptions/{cdIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/packages/bm90X2F2YWlsYWJsZQ==', path='/packages/{packageId}', operation='delete'), DeleteEndpoint(substituted_url='/lookup/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/lookup/shells/{aasIdentifier}', operation='delete')]), <Response [400]>), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/descriptor', 'get', PreparePPDPositive(asset_administration_shells=[AssetAdministrationShell(password=None, _id=None, raw_asset_administration_shell={'modelType': {'name': 'AssetAdministrationShell'}, 'assetInformation': {'assetKind': 'Instance', 'globalAssetId': {'keys': [None]}, 'billOfMaterial': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial'}]}]}, 'submodels': [{'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/1145_8090_6012_5097'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/4445_8090_6012_7409'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2110_9090_6012_8448'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/5410_9090_6012_0950'}]}, {'keys': [{'idType': 'Iri', 'type': 'Submodel', 'value': 'https://example.com/ids/sm/2402_1191_1022_1090'}]}], 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/aas/3235_8090_6012_8932'}, 'idShort': 'FestoDemoAAS'}, sub_model_collection_uri='http://localhost:8080/submodels/{submodelIdentifier}', parsing_limit=100)], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Descriptor Interface'], 'summary': 'Returns the self-describing information of a network resource (Descriptor)', 'operationId': 'GetDescriptor', 'responses': {'200': {'description': 'Requested Descriptor', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Descriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/Descriptor/GetDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=ConceptDescription(password=None, _id=None, raw_concept_description={'modelType': {'name': 'ConceptDescription'}, 'administration': {'revision': '0', 'version': '0.9'}, 'identification': {'idType': 'Iri', 'id': 'https://acplt.org/Test_ConceptDescription'}, 'idShort': 'TestConceptDescription', 'isCaseOf': [{'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': 'http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription'}]}], 'description': [{'language': 'en-us', 'text': 'An example concept description for the test application'}, {'language': 'de', 'text': 'Ein Beispiel-ConceptDescription für eine Test-Anwendung'}]}), packages=None, full_url_path='/descriptor', substituted_url='/descriptor', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'descriptor'", 'code': '', 'timestamp': '2022-10-22T18:09:23.991+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'descriptor'", 'code': '', 'timestamp': '2022-10-22T18:09:23.991+00:00'}]}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [204]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=False, schema_conformation=False), '/shells/{aasIdentifier}', 'delete', DeleteEndpoint(substituted_url='/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/shells/{aasIdentifier}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [200]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=False, status_code=False, schema_conformation=False), '/submodels/{submodelIdentifier}', 'delete', DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/submodels/{submodelIdentifier}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [500]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', 'delete', DeleteEndpoint(substituted_url='/submodels/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==/submodel/submodel-elements/GripperUp', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors/{aasIdentifier}', 'delete', DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', 'delete', DeleteEndpoint(substituted_url='/registry/shell-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/registry/submodel-descriptors/{submodelIdentifier}', 'delete', DeleteEndpoint(substituted_url='/registry/submodel-descriptors/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vNDQ0NV84MDkwXzYwMTJfNzQwOQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [204]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: (TestResult(passed=True, status_code=False, schema_conformation=False), '/concept-descriptions/{cdIdentifier}', 'delete', DeleteEndpoint(substituted_url='/concept-descriptions/aHR0cHM6Ly9hY3BsdC5vcmcvVGVzdF9Db25jZXB0RGVzY3JpcHRpb24=', path='/concept-descriptions/{cdIdentifier}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [500]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/packages/{packageId}', 'delete', DeleteEndpoint(substituted_url='/packages/bm90X2F2YWlsYWJsZQ==', path='/packages/{packageId}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [404]>,), and kwargs: {'positive': True}
INFO:root:Ran with args: ('not implemented', '/lookup/shells/{aasIdentifier}', 'delete', DeleteEndpoint(substituted_url='/lookup/shells/aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvYWFzLzMyMzVfODA5MF82MDEyXzg5MzI=', path='/lookup/shells/{aasIdentifier}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns all Asset Administration Shells', 'operationId': 'GetAllAssetAdministrationShells', 'parameters': [{'name': 'assetIds', 'in': 'query', 'description': 'The key-value-pair of an Asset identifier', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'example': '[{"key": "globalAssetId","value": "http://example.company/myAsset"},{"key": "myOwnInternalAssetId","value": "12345ABC"}]', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}, {'name': 'idShort', 'in': 'query', 'description': 'The Asset Administration Shell’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shells', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShells/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByAssetId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByIdShort/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Creates a new Asset Administration Shell', 'operationId': 'PostAssetAdministrationShell', 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[]), <Response [200]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('/shells', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns all Asset Administration Shells', 'operationId': 'GetAllAssetAdministrationShells', 'parameters': [{'name': 'assetIds', 'in': 'query', 'description': 'The key-value-pair of an Asset identifier', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'example': '[{"key": "globalAssetId","value": "http://example.company/myAsset"},{"key": "myOwnInternalAssetId","value": "12345ABC"}]', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}, {'name': 'idShort', 'in': 'query', 'description': 'The Asset Administration Shell’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shells', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShells/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByAssetId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByIdShort/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Creates a new Asset Administration Shell', 'operationId': 'PostAssetAdministrationShell', 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells', substituted_url='/shells', path_params=None, get_response_json=[], get_response=<Response [200]>, single_get_response=[], post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), AttributeError("'list' object has no attribute 'get'"), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells', 'post', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns all Asset Administration Shells', 'operationId': 'GetAllAssetAdministrationShells', 'parameters': [{'name': 'assetIds', 'in': 'query', 'description': 'The key-value-pair of an Asset identifier', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'example': '[{"key": "globalAssetId","value": "http://example.company/myAsset"},{"key": "myOwnInternalAssetId","value": "12345ABC"}]', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}, {'name': 'idShort', 'in': 'query', 'description': 'The Asset Administration Shell’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shells', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShells/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByAssetId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByIdShort/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Creates a new Asset Administration Shell', 'operationId': 'PostAssetAdministrationShell', 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells', substituted_url='/shells', path_params=None, get_response_json=[], get_response=<Response [200]>, single_get_response=[], post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns a specific Asset Administration Shell', 'operationId': 'GetAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Updates an existing Asset Administration Shell', 'operationId': 'PutAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Deletes an Asset Administration Shell', 'operationId': 'DeleteAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[]), <Response [404]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells/{aasIdentifier}', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns a specific Asset Administration Shell', 'operationId': 'GetAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Updates an existing Asset Administration Shell', 'operationId': 'PutAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Deletes an Asset Administration Shell', 'operationId': 'DeleteAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}', substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.258+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.258+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells/{aasIdentifier}', 'put', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns a specific Asset Administration Shell', 'operationId': 'GetAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Updates an existing Asset Administration Shell', 'operationId': 'PutAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Deletes an Asset Administration Shell', 'operationId': 'DeleteAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}', substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.258+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.258+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Administration Shell', 'operationId': 'GetAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShell/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Administration Shell', 'operationId': 'PutAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete')]), <Response [404]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells/{aasIdentifier}/aas', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Administration Shell', 'operationId': 'GetAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShell/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Administration Shell', 'operationId': 'PutAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas', substituted_url='/shells/bm90X2F2YWlsYWJsZQ==/aas', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.288+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.288+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells/{aasIdentifier}/aas', 'put', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Administration Shell', 'operationId': 'GetAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShell/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Administration Shell', 'operationId': 'PutAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas', substituted_url='/shells/bm90X2F2YWlsYWJsZQ==/aas', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.288+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.288+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Information', 'operationId': 'GetAssetInformation', 'responses': {'200': {'description': 'Requested Asset Information', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetInformation/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Information', 'operationId': 'PutAssetInformation', 'requestBody': {'description': 'Asset Information object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Information updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetInformation/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas/asset-information', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete')]), <Response [404]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells/{aasIdentifier}/aas/asset-information', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Information', 'operationId': 'GetAssetInformation', 'responses': {'200': {'description': 'Requested Asset Information', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetInformation/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Information', 'operationId': 'PutAssetInformation', 'requestBody': {'description': 'Asset Information object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Information updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetInformation/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas/asset-information', substituted_url='/shells/bm90X2F2YWlsYWJsZQ==/aas/asset-information', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.316+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.316+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells/{aasIdentifier}/aas/asset-information', 'put', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Information', 'operationId': 'GetAssetInformation', 'responses': {'200': {'description': 'Requested Asset Information', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetInformation/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Information', 'operationId': 'PutAssetInformation', 'requestBody': {'description': 'Asset Information object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Information updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetInformation/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas/asset-information', substituted_url='/shells/bm90X2F2YWlsYWJsZQ==/aas/asset-information', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.316+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.316+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns all submodel references', 'operationId': 'GetAllSubmodelReferences', 'responses': {'200': {'description': 'Requested submodel references', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Reference'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelReferences/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Creates a submodel reference at the Asset Administration Shell', 'operationId': 'PostSubmodelReference', 'requestBody': {'description': 'Reference to the Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel reference created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelReference/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas/submodels', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete')]), <Response [404]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells/{aasIdentifier}/aas/submodels', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns all submodel references', 'operationId': 'GetAllSubmodelReferences', 'responses': {'200': {'description': 'Requested submodel references', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Reference'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelReferences/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Creates a submodel reference at the Asset Administration Shell', 'operationId': 'PostSubmodelReference', 'requestBody': {'description': 'Reference to the Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel reference created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelReference/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas/submodels', substituted_url='/shells/bm90X2F2YWlsYWJsZQ==/aas/submodels', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.352+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.352+00:00'}]}, post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells/{aasIdentifier}/aas/submodels', 'post', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns all submodel references', 'operationId': 'GetAllSubmodelReferences', 'responses': {'200': {'description': 'Requested submodel references', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Reference'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelReferences/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Creates a submodel reference at the Asset Administration Shell', 'operationId': 'PostSubmodelReference', 'requestBody': {'description': 'Reference to the Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel reference created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelReference/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas/submodels', substituted_url='/shells/bm90X2F2YWlsYWJsZQ==/aas/submodels', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.352+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.352+00:00'}]}, post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns all Submodels', 'operationId': 'GetAllSubmodels', 'parameters': [{'name': 'semanticId', 'in': 'query', 'description': 'The value of the semantic id reference (BASE64-URL-encoded)', 'schema': {'type': 'string'}}, {'name': 'idShort', 'in': 'query', 'description': 'The Submodel’s idShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodels', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Submodel'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodels/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/1/0/RC01']}, 'post': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new Submodel', 'operationId': 'PostSubmodel', 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('/submodels', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns all Submodels', 'operationId': 'GetAllSubmodels', 'parameters': [{'name': 'semanticId', 'in': 'query', 'description': 'The value of the semantic id reference (BASE64-URL-encoded)', 'schema': {'type': 'string'}}, {'name': 'idShort', 'in': 'query', 'description': 'The Submodel’s idShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodels', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Submodel'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodels/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/1/0/RC01']}, 'post': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new Submodel', 'operationId': 'PostSubmodel', 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels', substituted_url='/submodels', path_params=None, get_response_json=[{'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/1145_8090_6012_5097'}, 'idShort': 'Config'}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2110_9090_6012_8448'}, 'idShort': 'CalculatedAverages', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'GripperUpAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'GripperOpenAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'DistanceSensorAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateEntranceAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateMiddleAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateExitAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltForwardAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltBackwardAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'isRunningAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_greenAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_yellowAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_redAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltReadyAverage'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/5410_9090_6012_0950'}, 'idShort': 'DaySummary', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'string', 'idShort': 'JTS_data'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2402_1191_1022_1090'}, 'idShort': 'ProducerRecommendations', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '4.1', 'valueType': 'float', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '16.2', 'valueType': 'float', 'idShort': 'ProcessDuration'}]}], get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2402_1191_1022_1090'}, 'idShort': 'ProducerRecommendations', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '4.1', 'valueType': 'float', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '16.2', 'valueType': 'float', 'idShort': 'ProcessDuration'}]}, post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), AttributeError("'list' object has no attribute 'get'"), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/submodels', 'post', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns all Submodels', 'operationId': 'GetAllSubmodels', 'parameters': [{'name': 'semanticId', 'in': 'query', 'description': 'The value of the semantic id reference (BASE64-URL-encoded)', 'schema': {'type': 'string'}}, {'name': 'idShort', 'in': 'query', 'description': 'The Submodel’s idShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodels', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Submodel'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodels/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/1/0/RC01']}, 'post': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new Submodel', 'operationId': 'PostSubmodel', 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels', substituted_url='/submodels', path_params=None, get_response_json=[{'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/1145_8090_6012_5097'}, 'idShort': 'Config'}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2110_9090_6012_8448'}, 'idShort': 'CalculatedAverages', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'GripperUpAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'GripperOpenAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'DistanceSensorAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateEntranceAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateMiddleAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateExitAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltForwardAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltBackwardAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'isRunningAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_greenAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_yellowAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_redAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltReadyAverage'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/5410_9090_6012_0950'}, 'idShort': 'DaySummary', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'string', 'idShort': 'JTS_data'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2402_1191_1022_1090'}, 'idShort': 'ProducerRecommendations', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '4.1', 'valueType': 'float', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '16.2', 'valueType': 'float', 'idShort': 'ProcessDuration'}]}], get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2402_1191_1022_1090'}, 'idShort': 'ProducerRecommendations', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '4.1', 'valueType': 'float', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '16.2', 'valueType': 'float', 'idShort': 'ProcessDuration'}]}, post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns a specific Submodel', 'operationId': 'GetSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelById/1/0/RC01']}, 'put': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new or updates an existing Submodel', 'operationId': 'PutSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}, '204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelById/1/0/RC01']}, 'delete': {'tags': ['Submodel Repository Interface'], 'summary': 'Deletes a Submodel', 'operationId': 'DeleteSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels/{submodelIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete')]), <Response [404]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/submodels/{submodelIdentifier}', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns a specific Submodel', 'operationId': 'GetSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelById/1/0/RC01']}, 'put': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new or updates an existing Submodel', 'operationId': 'PutSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}, '204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelById/1/0/RC01']}, 'delete': {'tags': ['Submodel Repository Interface'], 'summary': 'Deletes a Submodel', 'operationId': 'DeleteSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels/{submodelIdentifier}', substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.531+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.531+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/submodels/{submodelIdentifier}', 'put', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns a specific Submodel', 'operationId': 'GetSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelById/1/0/RC01']}, 'put': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new or updates an existing Submodel', 'operationId': 'PutSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}, '204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelById/1/0/RC01']}, 'delete': {'tags': ['Submodel Repository Interface'], 'summary': 'Deletes a Submodel', 'operationId': 'DeleteSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels/{submodelIdentifier}', substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.531+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.531+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns the Submodel', 'operationId': 'GetSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodel/1/0/RC01']}, 'put': {'tags': ['Submodel Interface'], 'summary': 'Updates the Submodel', 'operationId': 'PutSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete')]), <Response [404]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/submodels/{submodelIdentifier}/submodel', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns the Submodel', 'operationId': 'GetSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodel/1/0/RC01']}, 'put': {'tags': ['Submodel Interface'], 'summary': 'Updates the Submodel', 'operationId': 'PutSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel', substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.559+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.559+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/submodels/{submodelIdentifier}/submodel', 'put', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns the Submodel', 'operationId': 'GetSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodel/1/0/RC01']}, 'put': {'tags': ['Submodel Interface'], 'summary': 'Updates the Submodel', 'operationId': 'PutSubmodel', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel', substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.559+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.559+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns all submodel elements including their hierarchy', 'operationId': 'GetAllSubmodelElements', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'responses': {'200': {'description': 'List of found submodel elements', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelElement'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelElements/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelElementsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelElementsByParentPathAndSemanticId/1/0/RC01']}, 'post': {'tags': ['Submodel Interface'], 'summary': 'Creates a new submodel element', 'operationId': 'PostSubmodelElement', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel element created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelElement/1/0/RC01c']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete')]), <Response [404]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/submodels/{submodelIdentifier}/submodel/submodel-elements', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns all submodel elements including their hierarchy', 'operationId': 'GetAllSubmodelElements', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'responses': {'200': {'description': 'List of found submodel elements', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelElement'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelElements/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelElementsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelElementsByParentPathAndSemanticId/1/0/RC01']}, 'post': {'tags': ['Submodel Interface'], 'summary': 'Creates a new submodel element', 'operationId': 'PostSubmodelElement', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel element created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelElement/1/0/RC01c']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements', substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by reference (Submodel)[IRI]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.589+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by reference (Submodel)[IRI]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.589+00:00'}]}, post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/submodels/{submodelIdentifier}/submodel/submodel-elements', 'post', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns all submodel elements including their hierarchy', 'operationId': 'GetAllSubmodelElements', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'responses': {'200': {'description': 'List of found submodel elements', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelElement'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelElements/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelElementsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelElementsByParentPathAndSemanticId/1/0/RC01']}, 'post': {'tags': ['Submodel Interface'], 'summary': 'Creates a new submodel element', 'operationId': 'PostSubmodelElement', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel element created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelElement/1/0/RC01c']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements', substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by reference (Submodel)[IRI]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.589+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by reference (Submodel)[IRI]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.589+00:00'}]}, post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns a specific submodel element from the Submodel at a specified path', 'operationId': 'GetSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelElementByPath/1/0/RC01']}, 'put': {'tags': ['Submodel Interface'], 'summary': 'Updates an existing submodel element at a specified path within submodel elements hierarchy', 'operationId': 'PutSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel element updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelElementByPath/1/0/RC01c', 'https://admin-shell.io/aas/API/SetSubmodelElementValueByPath/1/0/RC01']}, 'post': {'tags': ['Submodel Interface'], 'summary': 'Creates a new submodel element at a specified path within submodel elements hierarchy', 'operationId': 'PostSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel element created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelElementByPath/1/0/RC01c']}, 'delete': {'tags': ['Submodel Interface'], 'summary': 'Deletes a submodel element at a specified path within the submodel elements hierarchy', 'operationId': 'DeleteSubmodelElementByPath', 'parameters': [{'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel element deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelElementByPath/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete')]), <Response [500]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns a specific submodel element from the Submodel at a specified path', 'operationId': 'GetSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelElementByPath/1/0/RC01']}, 'put': {'tags': ['Submodel Interface'], 'summary': 'Updates an existing submodel element at a specified path within submodel elements hierarchy', 'operationId': 'PutSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel element updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelElementByPath/1/0/RC01c', 'https://admin-shell.io/aas/API/SetSubmodelElementValueByPath/1/0/RC01']}, 'post': {'tags': ['Submodel Interface'], 'summary': 'Creates a new submodel element at a specified path within submodel elements hierarchy', 'operationId': 'PostSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel element created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelElementByPath/1/0/RC01c']}, 'delete': {'tags': ['Submodel Interface'], 'summary': 'Deletes a submodel element at a specified path within the submodel elements hierarchy', 'operationId': 'DeleteSubmodelElementByPath', 'parameters': [{'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel element deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelElementByPath/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Exception', 'code': '', 'timestamp': '2022-10-22T18:09:24.623+00:00'}]}, get_response=<Response [500]>, single_get_response={'success': False, 'messages': [{'messageType': 'Exception', 'code': '', 'timestamp': '2022-10-22T18:09:24.623+00:00'}]}, post_data={}, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', 'put', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns a specific submodel element from the Submodel at a specified path', 'operationId': 'GetSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelElementByPath/1/0/RC01']}, 'put': {'tags': ['Submodel Interface'], 'summary': 'Updates an existing submodel element at a specified path within submodel elements hierarchy', 'operationId': 'PutSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel element updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelElementByPath/1/0/RC01c', 'https://admin-shell.io/aas/API/SetSubmodelElementValueByPath/1/0/RC01']}, 'post': {'tags': ['Submodel Interface'], 'summary': 'Creates a new submodel element at a specified path within submodel elements hierarchy', 'operationId': 'PostSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel element created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelElementByPath/1/0/RC01c']}, 'delete': {'tags': ['Submodel Interface'], 'summary': 'Deletes a submodel element at a specified path within the submodel elements hierarchy', 'operationId': 'DeleteSubmodelElementByPath', 'parameters': [{'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel element deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelElementByPath/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Exception', 'code': '', 'timestamp': '2022-10-22T18:09:24.623+00:00'}]}, get_response=<Response [500]>, single_get_response={'success': False, 'messages': [{'messageType': 'Exception', 'code': '', 'timestamp': '2022-10-22T18:09:24.623+00:00'}]}, post_data={}, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', 'post', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns a specific submodel element from the Submodel at a specified path', 'operationId': 'GetSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelElementByPath/1/0/RC01']}, 'put': {'tags': ['Submodel Interface'], 'summary': 'Updates an existing submodel element at a specified path within submodel elements hierarchy', 'operationId': 'PutSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel element updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelElementByPath/1/0/RC01c', 'https://admin-shell.io/aas/API/SetSubmodelElementValueByPath/1/0/RC01']}, 'post': {'tags': ['Submodel Interface'], 'summary': 'Creates a new submodel element at a specified path within submodel elements hierarchy', 'operationId': 'PostSubmodelElementByPath', 'parameters': [{'name': 'level', 'in': 'query', 'description': 'Determines the structural depth of the respective resource content', 'required': False, 'schema': {'type': 'string', 'default': 'deep', 'enum': ['deep', 'core']}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'extent', 'in': 'query', 'description': 'Determines to which extent the resource is being serialized', 'required': False, 'schema': {'type': 'string', 'enum': ['withBlobValue', 'withoutBlobValue']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Requested submodel element', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel element created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelElement'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelElementByPath/1/0/RC01c']}, 'delete': {'tags': ['Submodel Interface'], 'summary': 'Deletes a submodel element at a specified path within the submodel elements hierarchy', 'operationId': 'DeleteSubmodelElementByPath', 'parameters': [{'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel element deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelElementByPath/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Exception', 'code': '', 'timestamp': '2022-10-22T18:09:24.623+00:00'}]}, get_response=<Response [500]>, single_get_response={'success': False, 'messages': [{'messageType': 'Exception', 'code': '', 'timestamp': '2022-10-22T18:09:24.623+00:00'}]}, post_data={}, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}/invoke', 'post', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'post': {'tags': ['Submodel Interface'], 'summary': 'Synchronously or asynchronously invokes an Operation at a specified path', 'operationId': 'InvokeOperation', 'parameters': [{'name': 'async', 'in': 'query', 'description': 'Determines whether an operation invocation is performed asynchronously or synchronously', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'boolean', 'default': False}}, {'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated), in this case an operation', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Operation request object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/OperationRequest'}}}, 'required': True}, 'responses': {'200': {'description': 'Operation result object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/OperationResult'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/InvokeOperationSync/1/0/RC01', 'https://admin-shell.io/aas/API/InvokeOperationAsync/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}/invoke', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns the Operation result of an asynchronous invoked Operation', 'operationId': 'GetOperationAsyncResult', 'parameters': [{'name': 'content', 'in': 'query', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'value']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated), in this case an operation', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'handleId', 'in': 'path', 'description': 'The returned handle id of an operation’s asynchronous invocation used to request the current state of the operation’s execution (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Operation result object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/OperationResult'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetOperationAsyncResult/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}/operation-results/{handleId}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete')]), <Response [400]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}/operation-results/{handleId}', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Interface'], 'summary': 'Returns the Operation result of an asynchronous invoked Operation', 'operationId': 'GetOperationAsyncResult', 'parameters': [{'name': 'content', 'in': 'query', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'value']}}, {'name': 'idShortPath', 'in': 'path', 'description': 'IdShort path to the submodel element (dot-separated), in this case an operation', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'handleId', 'in': 'path', 'description': 'The returned handle id of an operation’s asynchronous invocation used to request the current state of the operation’s execution (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Operation result object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/OperationResult'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetOperationAsyncResult/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}/operation-results/{handleId}', substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==/operation-results/{handleId}', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:24.688+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:24.688+00:00'}]}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns all Asset Administration Shell Descriptors', 'operationId': 'GetAllAssetAdministrationShellDescriptors', 'responses': {'200': {'description': 'Requested Asset Administration Shell Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, '404': {'description': 'Requested Asset Administration Shell Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShellDescriptors/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Creates a new Asset Administration Shell Descriptor, i.e. registers an AAS', 'operationId': 'PostAssetAdministrationShellDescriptor', 'requestBody': {'description': 'Asset Administration Shell Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShellDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/shell-descriptors', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete')]), <Response [400]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns all Asset Administration Shell Descriptors', 'operationId': 'GetAllAssetAdministrationShellDescriptors', 'responses': {'200': {'description': 'Requested Asset Administration Shell Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, '404': {'description': 'Requested Asset Administration Shell Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShellDescriptors/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Creates a new Asset Administration Shell Descriptor, i.e. registers an AAS', 'operationId': 'PostAssetAdministrationShellDescriptor', 'requestBody': {'description': 'Asset Administration Shell Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShellDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/shell-descriptors', substituted_url='/registry/shell-descriptors', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:24.724+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:24.724+00:00'}]}, post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors', 'post', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns all Asset Administration Shell Descriptors', 'operationId': 'GetAllAssetAdministrationShellDescriptors', 'responses': {'200': {'description': 'Requested Asset Administration Shell Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, '404': {'description': 'Requested Asset Administration Shell Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShellDescriptors/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Creates a new Asset Administration Shell Descriptor, i.e. registers an AAS', 'operationId': 'PostAssetAdministrationShellDescriptor', 'requestBody': {'description': 'Asset Administration Shell Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShellDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/shell-descriptors', substituted_url='/registry/shell-descriptors', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:24.724+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:24.724+00:00'}]}, post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns a specific Asset Administration Shell Descriptor', 'operationId': 'GetAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellDescriptorById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Updates an existing Asset Administration Shell Descriptor', 'operationId': 'PutAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Deletes an Asset Administration Shell Descriptor, i.e. de-registers an AAS', 'operationId': 'DeleteAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete')]), <Response [400]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors/{aasIdentifier}', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns a specific Asset Administration Shell Descriptor', 'operationId': 'GetAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellDescriptorById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Updates an existing Asset Administration Shell Descriptor', 'operationId': 'PutAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Deletes an Asset Administration Shell Descriptor, i.e. de-registers an AAS', 'operationId': 'DeleteAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}', substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/bm90X2F2YWlsYWJsZQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:24.753+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/bm90X2F2YWlsYWJsZQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:24.753+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors/{aasIdentifier}', 'put', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns a specific Asset Administration Shell Descriptor', 'operationId': 'GetAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellDescriptorById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Updates an existing Asset Administration Shell Descriptor', 'operationId': 'PutAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Deletes an Asset Administration Shell Descriptor, i.e. de-registers an AAS', 'operationId': 'DeleteAssetAdministrationShellDescriptorById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}', substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/bm90X2F2YWlsYWJsZQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:24.753+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/bm90X2F2YWlsYWJsZQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:24.753+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns all Submodel Descriptors', 'operationId': 'GetAllSubmodelDescriptors_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Creates a new Submodel Descriptor, i.e. registers a submodel', 'operationId': 'PostSubmodelDescriptor_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete')]), <Response [400]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns all Submodel Descriptors', 'operationId': 'GetAllSubmodelDescriptors_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Creates a new Submodel Descriptor, i.e. registers a submodel', 'operationId': 'PostSubmodelDescriptor_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors', substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:24.781+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:24.781+00:00'}]}, post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors', 'post', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns all Submodel Descriptors', 'operationId': 'GetAllSubmodelDescriptors_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Creates a new Submodel Descriptor, i.e. registers a submodel', 'operationId': 'PostSubmodelDescriptor_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors', substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:24.781+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:24.781+00:00'}]}, post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns a specific Submodel Descriptor', 'operationId': 'GetSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelDescriptorById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Updates an existing Submodel Descriptor', 'operationId': 'PutSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Deletes a Submodel Descriptor, i.e. de-registers a submodel', 'operationId': 'DeleteSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete')]), <Response [400]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns a specific Submodel Descriptor', 'operationId': 'GetSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelDescriptorById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Updates an existing Submodel Descriptor', 'operationId': 'PutSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Deletes a Submodel Descriptor, i.e. de-registers a submodel', 'operationId': 'DeleteSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors/bm90X2F2YWlsYWJsZQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:24.813+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors/bm90X2F2YWlsYWJsZQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:24.813+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', 'put', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Returns a specific Submodel Descriptor', 'operationId': 'GetSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelDescriptorById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Updates an existing Submodel Descriptor', 'operationId': 'PutSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Registry Interface'], 'summary': 'Deletes a Submodel Descriptor, i.e. de-registers a submodel', 'operationId': 'DeleteSubmodelDescriptorById_AASRegistry', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}, {'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors/bm90X2F2YWlsYWJsZQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:24.813+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors/bm90X2F2YWlsYWJsZQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:24.813+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Registry Interface'], 'summary': 'Returns all Submodel Descriptors', 'operationId': 'GetAllSubmodelDescriptors', 'responses': {'200': {'description': 'Requested Submodel Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/1/0/RC01']}, 'post': {'tags': ['Submodel Registry Interface'], 'summary': 'Creates a new Submodel Descriptor, i.e. registers a submodel', 'operationId': 'PostSubmodelDescriptor', 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/submodel-descriptors', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete')]), <Response [400]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/registry/submodel-descriptors', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Registry Interface'], 'summary': 'Returns all Submodel Descriptors', 'operationId': 'GetAllSubmodelDescriptors', 'responses': {'200': {'description': 'Requested Submodel Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/1/0/RC01']}, 'post': {'tags': ['Submodel Registry Interface'], 'summary': 'Creates a new Submodel Descriptor, i.e. registers a submodel', 'operationId': 'PostSubmodelDescriptor', 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/submodel-descriptors', substituted_url='/registry/submodel-descriptors', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:24.840+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:24.840+00:00'}]}, post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/registry/submodel-descriptors', 'post', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Registry Interface'], 'summary': 'Returns all Submodel Descriptors', 'operationId': 'GetAllSubmodelDescriptors', 'responses': {'200': {'description': 'Requested Submodel Descriptors', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/1/0/RC01']}, 'post': {'tags': ['Submodel Registry Interface'], 'summary': 'Creates a new Submodel Descriptor, i.e. registers a submodel', 'operationId': 'PostSubmodelDescriptor', 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel Descriptor created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/submodel-descriptors', substituted_url='/registry/submodel-descriptors', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:24.840+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors'", 'code': '', 'timestamp': '2022-10-22T18:09:24.840+00:00'}]}, post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Registry Interface'], 'summary': 'Returns a specific Submodel Descriptor', 'operationId': 'GetSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelDescriptorById/1/0/RC01']}, 'put': {'tags': ['Submodel Registry Interface'], 'summary': 'Updates an existing Submodel Descriptor', 'operationId': 'PutSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Submodel Registry Interface'], 'summary': 'Deletes a Submodel Descriptor, i.e. de-registers a submodel', 'operationId': 'DeleteSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/submodel-descriptors/{submodelIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete')]), <Response [400]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/registry/submodel-descriptors/{submodelIdentifier}', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Registry Interface'], 'summary': 'Returns a specific Submodel Descriptor', 'operationId': 'GetSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelDescriptorById/1/0/RC01']}, 'put': {'tags': ['Submodel Registry Interface'], 'summary': 'Updates an existing Submodel Descriptor', 'operationId': 'PutSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Submodel Registry Interface'], 'summary': 'Deletes a Submodel Descriptor, i.e. de-registers a submodel', 'operationId': 'DeleteSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/submodel-descriptors/{submodelIdentifier}', substituted_url='/registry/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors/bm90X2F2YWlsYWJsZQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:24.873+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors/bm90X2F2YWlsYWJsZQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:24.873+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/registry/submodel-descriptors/{submodelIdentifier}', 'put', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Registry Interface'], 'summary': 'Returns a specific Submodel Descriptor', 'operationId': 'GetSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel Descriptor', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelDescriptorById/1/0/RC01']}, 'put': {'tags': ['Submodel Registry Interface'], 'summary': 'Updates an existing Submodel Descriptor', 'operationId': 'PutSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel Descriptor object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SubmodelDescriptor'}}}, 'required': True}, 'responses': {'204': {'description': 'Submodel Descriptor updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelDescriptorById/1/0/RC01']}, 'delete': {'tags': ['Submodel Registry Interface'], 'summary': 'Deletes a Submodel Descriptor, i.e. de-registers a submodel', 'operationId': 'DeleteSubmodelDescriptorById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel Descriptor deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/registry/submodel-descriptors/{submodelIdentifier}', substituted_url='/registry/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors/bm90X2F2YWlsYWJsZQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:24.873+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'registry/submodel-descriptors/bm90X2F2YWlsYWJsZQ=='", 'code': '', 'timestamp': '2022-10-22T18:09:24.873+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Concept Description Repository Interface'], 'summary': 'Returns all Concept Descriptions', 'operationId': 'GetAllConceptDescriptions', 'parameters': [{'name': 'idShort', 'in': 'query', 'description': 'The Concept Description’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}, {'name': 'isCaseOf', 'in': 'query', 'description': 'IsCaseOf reference (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}, {'name': 'dataSpecificationRef', 'in': 'query', 'description': 'DataSpecification reference (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Concept Descriptions', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/ConceptDescription'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllConceptDescriptions/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByIdShort/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByIsCaseOf/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByDataSpecificationReference/1/0/RC01']}, 'post': {'tags': ['Concept Description Repository Interface'], 'summary': 'Creates a new Concept Description', 'operationId': 'PostConceptDescription', 'requestBody': {'description': 'Concept Description object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}, 'required': True}, 'responses': {'201': {'description': 'Concept Description created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostConceptDescription/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/concept-descriptions', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('/concept-descriptions', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Concept Description Repository Interface'], 'summary': 'Returns all Concept Descriptions', 'operationId': 'GetAllConceptDescriptions', 'parameters': [{'name': 'idShort', 'in': 'query', 'description': 'The Concept Description’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}, {'name': 'isCaseOf', 'in': 'query', 'description': 'IsCaseOf reference (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}, {'name': 'dataSpecificationRef', 'in': 'query', 'description': 'DataSpecification reference (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Concept Descriptions', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/ConceptDescription'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllConceptDescriptions/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByIdShort/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByIsCaseOf/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByDataSpecificationReference/1/0/RC01']}, 'post': {'tags': ['Concept Description Repository Interface'], 'summary': 'Creates a new Concept Description', 'operationId': 'PostConceptDescription', 'requestBody': {'description': 'Concept Description object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}, 'required': True}, 'responses': {'201': {'description': 'Concept Description created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostConceptDescription/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/concept-descriptions', substituted_url='/concept-descriptions', path_params=None, get_response_json=[], get_response=<Response [200]>, single_get_response=[], post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), AttributeError("'list' object has no attribute 'get'"), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/concept-descriptions', 'post', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Concept Description Repository Interface'], 'summary': 'Returns all Concept Descriptions', 'operationId': 'GetAllConceptDescriptions', 'parameters': [{'name': 'idShort', 'in': 'query', 'description': 'The Concept Description’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}, {'name': 'isCaseOf', 'in': 'query', 'description': 'IsCaseOf reference (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}, {'name': 'dataSpecificationRef', 'in': 'query', 'description': 'DataSpecification reference (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Concept Descriptions', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/ConceptDescription'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllConceptDescriptions/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByIdShort/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByIsCaseOf/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllConceptDescriptionsByDataSpecificationReference/1/0/RC01']}, 'post': {'tags': ['Concept Description Repository Interface'], 'summary': 'Creates a new Concept Description', 'operationId': 'PostConceptDescription', 'requestBody': {'description': 'Concept Description object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}, 'required': True}, 'responses': {'201': {'description': 'Concept Description created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostConceptDescription/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/concept-descriptions', substituted_url='/concept-descriptions', path_params=None, get_response_json=[], get_response=<Response [200]>, single_get_response=[], post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Concept Description Repository Interface'], 'summary': 'Returns a specific Concept Description', 'operationId': 'GetConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Concept Description', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetConceptDescriptionById/1/0/RC01']}, 'put': {'tags': ['Concept Description Repository Interface'], 'summary': 'Updates an existing Concept Description', 'operationId': 'PutConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Concept Description object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}, 'required': True}, 'responses': {'204': {'description': 'Concept Description updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutConceptDescriptionById/1/0/RC01']}, 'delete': {'tags': ['Concept Description Repository Interface'], 'summary': 'Deletes a Concept Description', 'operationId': 'DeleteConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Concept Description deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteConceptDescriptionById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/concept-descriptions/{cdIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete')]), <Response [404]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/concept-descriptions/{cdIdentifier}', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Concept Description Repository Interface'], 'summary': 'Returns a specific Concept Description', 'operationId': 'GetConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Concept Description', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetConceptDescriptionById/1/0/RC01']}, 'put': {'tags': ['Concept Description Repository Interface'], 'summary': 'Updates an existing Concept Description', 'operationId': 'PutConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Concept Description object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}, 'required': True}, 'responses': {'204': {'description': 'Concept Description updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutConceptDescriptionById/1/0/RC01']}, 'delete': {'tags': ['Concept Description Repository Interface'], 'summary': 'Deletes a Concept Description', 'operationId': 'DeleteConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Concept Description deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteConceptDescriptionById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/concept-descriptions/{cdIdentifier}', substituted_url='/concept-descriptions/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.938+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.938+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/concept-descriptions/{cdIdentifier}', 'put', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Concept Description Repository Interface'], 'summary': 'Returns a specific Concept Description', 'operationId': 'GetConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Concept Description', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetConceptDescriptionById/1/0/RC01']}, 'put': {'tags': ['Concept Description Repository Interface'], 'summary': 'Updates an existing Concept Description', 'operationId': 'PutConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Concept Description object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ConceptDescription'}}}, 'required': True}, 'responses': {'204': {'description': 'Concept Description updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutConceptDescriptionById/1/0/RC01']}, 'delete': {'tags': ['Concept Description Repository Interface'], 'summary': 'Deletes a Concept Description', 'operationId': 'DeleteConceptDescriptionById', 'parameters': [{'name': 'cdIdentifier', 'in': 'path', 'description': 'The Concept Description’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Concept Description deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteConceptDescriptionById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/concept-descriptions/{cdIdentifier}', substituted_url='/concept-descriptions/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.938+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:24.938+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['AASX File Server Interface'], 'summary': 'Returns a list of available AASX packages at the server', 'operationId': 'GetAllAASXPackageIds', 'parameters': [{'name': 'aasId', 'in': 'query', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested package list', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/PackageDescription'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAASXPackageIds/1/0/RC01']}, 'post': {'tags': ['AASX File Server Interface'], 'summary': 'Stores the AASX package at the server', 'operationId': 'PostAASXPackage', 'requestBody': {'description': 'AASX package', 'content': {'multipart/form-data': {'schema': {'$ref': '#/components/schemas/packages_body'}, 'encoding': {'file': {'contentType': 'application/asset-administration-shell-package', 'style': 'form'}}}}, 'required': True}, 'responses': {'201': {'description': 'AASX package stored successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PackageDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAASXPackage/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/packages', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/concept-descriptions/bm90X2F2YWlsYWJsZQ==', path='/concept-descriptions/{cdIdentifier}', operation='delete')]), <Response [405]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/packages', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['AASX File Server Interface'], 'summary': 'Returns a list of available AASX packages at the server', 'operationId': 'GetAllAASXPackageIds', 'parameters': [{'name': 'aasId', 'in': 'query', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested package list', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/PackageDescription'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAASXPackageIds/1/0/RC01']}, 'post': {'tags': ['AASX File Server Interface'], 'summary': 'Stores the AASX package at the server', 'operationId': 'PostAASXPackage', 'requestBody': {'description': 'AASX package', 'content': {'multipart/form-data': {'schema': {'$ref': '#/components/schemas/packages_body'}, 'encoding': {'file': {'contentType': 'application/asset-administration-shell-package', 'style': 'form'}}}}, 'required': True}, 'responses': {'201': {'description': 'AASX package stored successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PackageDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAASXPackage/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/packages', substituted_url='/packages', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "method 'GET' not allowed for URL 'packages' (allowed methods: POST)", 'code': '', 'timestamp': '2022-10-22T18:09:24.970+00:00'}]}, get_response=<Response [405]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "method 'GET' not allowed for URL 'packages' (allowed methods: POST)", 'code': '', 'timestamp': '2022-10-22T18:09:24.970+00:00'}]}, post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/packages', 'post', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['AASX File Server Interface'], 'summary': 'Returns a list of available AASX packages at the server', 'operationId': 'GetAllAASXPackageIds', 'parameters': [{'name': 'aasId', 'in': 'query', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested package list', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/PackageDescription'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAASXPackageIds/1/0/RC01']}, 'post': {'tags': ['AASX File Server Interface'], 'summary': 'Stores the AASX package at the server', 'operationId': 'PostAASXPackage', 'requestBody': {'description': 'AASX package', 'content': {'multipart/form-data': {'schema': {'$ref': '#/components/schemas/packages_body'}, 'encoding': {'file': {'contentType': 'application/asset-administration-shell-package', 'style': 'form'}}}}, 'required': True}, 'responses': {'201': {'description': 'AASX package stored successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PackageDescription'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAASXPackage/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/packages', substituted_url='/packages', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "method 'GET' not allowed for URL 'packages' (allowed methods: POST)", 'code': '', 'timestamp': '2022-10-22T18:09:24.970+00:00'}]}, get_response=<Response [405]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "method 'GET' not allowed for URL 'packages' (allowed methods: POST)", 'code': '', 'timestamp': '2022-10-22T18:09:24.970+00:00'}]}, post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['AASX File Server Interface'], 'summary': 'Returns a specific AASX package from the server', 'operationId': 'GetAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested AASX package', 'headers': {'X-FileName': {'description': 'Filename of the package', 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}}, 'content': {'application/asset-administration-shell-package': {'schema': {'type': 'string', 'format': 'binary'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAASXByPackageId/1/0/RC01']}, 'put': {'tags': ['AASX File Server Interface'], 'summary': 'Updates the AASX package at the server', 'operationId': 'PutAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The Package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'AASX package', 'content': {'multipart/form-data': {'schema': {'$ref': '#/components/schemas/packages_packageId_body'}, 'encoding': {'file': {'contentType': 'application/asset-administration-shell-package', 'style': 'form'}}}}, 'required': True}, 'responses': {'204': {'description': 'AASX package updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAASXByPackageId/1/0/RC01']}, 'delete': {'tags': ['AASX File Server Interface'], 'summary': 'Deletes a specific AASX package from the server', 'operationId': 'DeleteAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The Package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAASXByPackageId/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/packages/{packageId}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/concept-descriptions/bm90X2F2YWlsYWJsZQ==', path='/concept-descriptions/{cdIdentifier}', operation='delete')]), <Response [500]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/packages/{packageId}', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['AASX File Server Interface'], 'summary': 'Returns a specific AASX package from the server', 'operationId': 'GetAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested AASX package', 'headers': {'X-FileName': {'description': 'Filename of the package', 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}}, 'content': {'application/asset-administration-shell-package': {'schema': {'type': 'string', 'format': 'binary'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAASXByPackageId/1/0/RC01']}, 'put': {'tags': ['AASX File Server Interface'], 'summary': 'Updates the AASX package at the server', 'operationId': 'PutAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The Package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'AASX package', 'content': {'multipart/form-data': {'schema': {'$ref': '#/components/schemas/packages_packageId_body'}, 'encoding': {'file': {'contentType': 'application/asset-administration-shell-package', 'style': 'form'}}}}, 'required': True}, 'responses': {'204': {'description': 'AASX package updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAASXByPackageId/1/0/RC01']}, 'delete': {'tags': ['AASX File Server Interface'], 'summary': 'Deletes a specific AASX package from the server', 'operationId': 'DeleteAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The Package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAASXByPackageId/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/packages/{packageId}', substituted_url='/packages/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Exception', 'text': 'no handler defined for this request', 'code': '', 'timestamp': '2022-10-22T18:09:25.003+00:00'}]}, get_response=<Response [500]>, single_get_response={'success': False, 'messages': [{'messageType': 'Exception', 'text': 'no handler defined for this request', 'code': '', 'timestamp': '2022-10-22T18:09:25.003+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/packages/{packageId}', 'put', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['AASX File Server Interface'], 'summary': 'Returns a specific AASX package from the server', 'operationId': 'GetAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested AASX package', 'headers': {'X-FileName': {'description': 'Filename of the package', 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}}, 'content': {'application/asset-administration-shell-package': {'schema': {'type': 'string', 'format': 'binary'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAASXByPackageId/1/0/RC01']}, 'put': {'tags': ['AASX File Server Interface'], 'summary': 'Updates the AASX package at the server', 'operationId': 'PutAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The Package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'AASX package', 'content': {'multipart/form-data': {'schema': {'$ref': '#/components/schemas/packages_packageId_body'}, 'encoding': {'file': {'contentType': 'application/asset-administration-shell-package', 'style': 'form'}}}}, 'required': True}, 'responses': {'204': {'description': 'AASX package updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAASXByPackageId/1/0/RC01']}, 'delete': {'tags': ['AASX File Server Interface'], 'summary': 'Deletes a specific AASX package from the server', 'operationId': 'DeleteAASXByPackageId', 'parameters': [{'name': 'packageId', 'in': 'path', 'description': 'The Package Id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAASXByPackageId/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/packages/{packageId}', substituted_url='/packages/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Exception', 'text': 'no handler defined for this request', 'code': '', 'timestamp': '2022-10-22T18:09:25.003+00:00'}]}, get_response=<Response [500]>, single_get_response={'success': False, 'messages': [{'messageType': 'Exception', 'text': 'no handler defined for this request', 'code': '', 'timestamp': '2022-10-22T18:09:25.003+00:00'}]}, post_data=None, patch_data=None, put_data={}, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Serialization Interface'], 'summary': 'Returns an appropriate serialization based on the specified format (see SerializationFormat)', 'operationId': 'GenerateSerializationByIds', 'parameters': [{'name': 'aasIds', 'in': 'query', 'description': "The Asset Administration Shells' unique ids (BASE64-URL-encoded)", 'required': True, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Identifier'}}}, {'name': 'submodelIds', 'in': 'query', 'description': "The Submodels' unique ids (BASE64-URL-encoded)", 'required': True, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Identifier'}}}, {'name': 'includeConceptDescriptions', 'in': 'query', 'description': 'Include Concept Descriptions?', 'required': True, 'style': 'form', 'explode': True, 'schema': {'type': 'boolean', 'default': True}}], 'responses': {'200': {'description': 'Requested serialization based on SerializationFormat', 'content': {'application/asset-administration-shell-package+xml': {'schema': {'type': 'string', 'description': 'AASX package', 'format': 'binary'}}, 'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellEnvironment'}}, 'application/xml': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellEnvironment'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GenerateSerializationByIds/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/serialization', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/concept-descriptions/bm90X2F2YWlsYWJsZQ==', path='/concept-descriptions/{cdIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/packages/bm90X2F2YWlsYWJsZQ==', path='/packages/{packageId}', operation='delete')]), <Response [200]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('/serialization', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Serialization Interface'], 'summary': 'Returns an appropriate serialization based on the specified format (see SerializationFormat)', 'operationId': 'GenerateSerializationByIds', 'parameters': [{'name': 'aasIds', 'in': 'query', 'description': "The Asset Administration Shells' unique ids (BASE64-URL-encoded)", 'required': True, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Identifier'}}}, {'name': 'submodelIds', 'in': 'query', 'description': "The Submodels' unique ids (BASE64-URL-encoded)", 'required': True, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Identifier'}}}, {'name': 'includeConceptDescriptions', 'in': 'query', 'description': 'Include Concept Descriptions?', 'required': True, 'style': 'form', 'explode': True, 'schema': {'type': 'boolean', 'default': True}}], 'responses': {'200': {'description': 'Requested serialization based on SerializationFormat', 'content': {'application/asset-administration-shell-package+xml': {'schema': {'type': 'string', 'description': 'AASX package', 'format': 'binary'}}, 'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellEnvironment'}}, 'application/xml': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShellEnvironment'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GenerateSerializationByIds/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/serialization', substituted_url='/serialization', path_params=None, get_response_json={'assetAdministrationShells': [], 'conceptDescriptions': [], 'submodels': []}, get_response=<Response [200]>, single_get_response={'assetAdministrationShells': [], 'conceptDescriptions': [], 'submodels': []}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), TypeError("'NoneType' object is not subscriptable"), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Returns a list of Asset Administration Shell ids based on Asset identifier key-value-pairs', 'operationId': 'GetAllAssetAdministrationShellIdsByAssetLink', 'parameters': [{'name': 'assetIds', 'in': 'query', 'description': 'The key-value-pair of an Asset identifier', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'example': '[{"key": "globalAssetId","value": "http://example.company/myAsset"},{"key": "myOwnInternalAssetId","value": "12345ABC"}]', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell ids', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Identifier'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShellIdsByAssetLink/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/lookup/shells', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/concept-descriptions/bm90X2F2YWlsYWJsZQ==', path='/concept-descriptions/{cdIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/packages/bm90X2F2YWlsYWJsZQ==', path='/packages/{packageId}', operation='delete')]), <Response [200]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('/lookup/shells', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Returns a list of Asset Administration Shell ids based on Asset identifier key-value-pairs', 'operationId': 'GetAllAssetAdministrationShellIdsByAssetLink', 'parameters': [{'name': 'assetIds', 'in': 'query', 'description': 'The key-value-pair of an Asset identifier', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'example': '[{"key": "globalAssetId","value": "http://example.company/myAsset"},{"key": "myOwnInternalAssetId","value": "12345ABC"}]', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell ids', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Identifier'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShellIdsByAssetLink/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/lookup/shells', substituted_url='/lookup/shells', path_params=None, get_response_json=[], get_response=<Response [200]>, single_get_response=[], post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), AttributeError("'list' object has no attribute 'get'"), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Returns a list of Asset identifier key-value-pairs based on an Asset Administration Shell id to edit discoverable content', 'operationId': 'GetAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset identifier key-value-pairs', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetLinksById/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Creates all Asset identifier key-value-pair linked to an Asset Administration Shell to edit discoverable content', 'operationId': 'PostAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset identifier key-value-pairs', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}, 'required': True}, 'responses': {'201': {'description': 'Asset identifier key-value-pairs created successfully', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAllAssetLinksById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Deletes all Asset identifier key-value-pair linked to an Asset Administration Shell to edit discoverable content', 'operationId': 'DeleteAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset identifier key-value-pairs deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAllAssetLinksById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/lookup/shells/{aasIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/concept-descriptions/bm90X2F2YWlsYWJsZQ==', path='/concept-descriptions/{cdIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/packages/bm90X2F2YWlsYWJsZQ==', path='/packages/{packageId}', operation='delete')]), <Response [404]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/lookup/shells/{aasIdentifier}', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Returns a list of Asset identifier key-value-pairs based on an Asset Administration Shell id to edit discoverable content', 'operationId': 'GetAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset identifier key-value-pairs', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetLinksById/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Creates all Asset identifier key-value-pair linked to an Asset Administration Shell to edit discoverable content', 'operationId': 'PostAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset identifier key-value-pairs', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}, 'required': True}, 'responses': {'201': {'description': 'Asset identifier key-value-pairs created successfully', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAllAssetLinksById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Deletes all Asset identifier key-value-pair linked to an Asset Administration Shell to edit discoverable content', 'operationId': 'DeleteAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset identifier key-value-pairs deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAllAssetLinksById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/lookup/shells/{aasIdentifier}', substituted_url='/lookup/shells/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:25.076+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:25.076+00:00'}]}, post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/lookup/shells/{aasIdentifier}', 'post', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Returns a list of Asset identifier key-value-pairs based on an Asset Administration Shell id to edit discoverable content', 'operationId': 'GetAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset identifier key-value-pairs', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetLinksById/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Creates all Asset identifier key-value-pair linked to an Asset Administration Shell to edit discoverable content', 'operationId': 'PostAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset identifier key-value-pairs', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}, 'required': True}, 'responses': {'201': {'description': 'Asset identifier key-value-pairs created successfully', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAllAssetLinksById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Basic Discovery'], 'summary': 'Deletes all Asset identifier key-value-pair linked to an Asset Administration Shell to edit discoverable content', 'operationId': 'DeleteAllAssetLinksById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset identifier key-value-pairs deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAllAssetLinksById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/lookup/shells/{aasIdentifier}', substituted_url='/lookup/shells/bm90X2F2YWlsYWJsZQ==', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:25.076+00:00'}]}, get_response=<Response [404]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Resource not found by id [CUSTOM]not_available', 'code': '', 'timestamp': '2022-10-22T18:09:25.076+00:00'}]}, post_data={}, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Descriptor Interface'], 'summary': 'Returns the self-describing information of a network resource (Descriptor)', 'operationId': 'GetDescriptor', 'responses': {'200': {'description': 'Requested Descriptor', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Descriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/Descriptor/GetDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/descriptor', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.first_test.endpoints_preparation.negative_test_one.PreparePPDNegative'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_first.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/registry/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/concept-descriptions/bm90X2F2YWlsYWJsZQ==', path='/concept-descriptions/{cdIdentifier}', operation='delete'), DeleteEndpoint(substituted_url='/packages/bm90X2F2YWlsYWJsZQ==', path='/packages/{packageId}', operation='delete'), DeleteEndpoint(substituted_url='/lookup/shells/bm90X2F2YWlsYWJsZQ==', path='/lookup/shells/{aasIdentifier}', operation='delete')]), <Response [400]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/descriptor', 'get', PreparePPDNegative(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Descriptor Interface'], 'summary': 'Returns the self-describing information of a network resource (Descriptor)', 'operationId': 'GetDescriptor', 'responses': {'200': {'description': 'Requested Descriptor', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Descriptor'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/Descriptor/GetDescriptor/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/descriptor', substituted_url='/descriptor', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'descriptor'", 'code': '', 'timestamp': '2022-10-22T18:09:25.098+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': "no matching request mapper found for URL 'descriptor'", 'code': '', 'timestamp': '2022-10-22T18:09:25.098+00:00'}]}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [404]>,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells/{aasIdentifier}', 'delete', DeleteEndpoint(substituted_url='/shells/bm90X2F2YWlsYWJsZQ==', path='/shells/{aasIdentifier}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [404]>,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/submodels/{submodelIdentifier}', 'delete', DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [500]>,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', 'delete', DeleteEndpoint(substituted_url='/submodels/bm90X2F2YWlsYWJsZQ==/submodel/submodel-elements/bm90X2F2YWlsYWJsZQ==', path='/submodels/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors/{aasIdentifier}', 'delete', DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', 'delete', DeleteEndpoint(substituted_url='/registry/shell-descriptors/bm90X2F2YWlsYWJsZQ==/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/registry/submodel-descriptors/{submodelIdentifier}', 'delete', DeleteEndpoint(substituted_url='/registry/submodel-descriptors/bm90X2F2YWlsYWJsZQ==', path='/registry/submodel-descriptors/{submodelIdentifier}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [404]>,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/concept-descriptions/{cdIdentifier}', 'delete', DeleteEndpoint(substituted_url='/concept-descriptions/bm90X2F2YWlsYWJsZQ==', path='/concept-descriptions/{cdIdentifier}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [500]>,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/packages/{packageId}', 'delete', DeleteEndpoint(substituted_url='/packages/bm90X2F2YWlsYWJsZQ==', path='/packages/{packageId}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [404]>,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/lookup/shells/{aasIdentifier}', 'delete', DeleteEndpoint(substituted_url='/lookup/shells/bm90X2F2YWlsYWJsZQ==', path='/lookup/shells/{aasIdentifier}', operation='delete'), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_first.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns all Asset Administration Shells', 'operationId': 'GetAllAssetAdministrationShells', 'parameters': [{'name': 'assetIds', 'in': 'query', 'description': 'The key-value-pair of an Asset identifier', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'example': '[{"key": "globalAssetId","value": "http://example.company/myAsset"},{"key": "myOwnInternalAssetId","value": "12345ABC"}]', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}, {'name': 'idShort', 'in': 'query', 'description': 'The Asset Administration Shell’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shells', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShells/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByAssetId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByIdShort/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Creates a new Asset Administration Shell', 'operationId': 'PostAssetAdministrationShell', 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.second_test.endpoints_preparation.negative_test_two.PreparePPDNegativeTwo'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_second.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[]), <Response [200]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('/shells', 'get', PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns all Asset Administration Shells', 'operationId': 'GetAllAssetAdministrationShells', 'parameters': [{'name': 'assetIds', 'in': 'query', 'description': 'The key-value-pair of an Asset identifier', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'example': '[{"key": "globalAssetId","value": "http://example.company/myAsset"},{"key": "myOwnInternalAssetId","value": "12345ABC"}]', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}, {'name': 'idShort', 'in': 'query', 'description': 'The Asset Administration Shell’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shells', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShells/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByAssetId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByIdShort/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Creates a new Asset Administration Shell', 'operationId': 'PostAssetAdministrationShell', 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells', substituted_url='/shells', path_params=None, get_response_json=[], get_response=<Response [200]>, single_get_response=[], post_data=[], patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), AttributeError("'list' object has no attribute 'get'"), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_second.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells', 'post', PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns all Asset Administration Shells', 'operationId': 'GetAllAssetAdministrationShells', 'parameters': [{'name': 'assetIds', 'in': 'query', 'description': 'The key-value-pair of an Asset identifier', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'array', 'example': '[{"key": "globalAssetId","value": "http://example.company/myAsset"},{"key": "myOwnInternalAssetId","value": "12345ABC"}]', 'items': {'$ref': '#/components/schemas/IdentifierKeyValuePair'}}}, {'name': 'idShort', 'in': 'query', 'description': 'The Asset Administration Shell’s IdShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shells', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllAssetAdministrationShells/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByAssetId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByIdShort/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Creates a new Asset Administration Shell', 'operationId': 'PostAssetAdministrationShell', 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'201': {'description': 'Asset Administration Shell created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells', substituted_url='/shells', path_params=None, get_response_json=[], get_response=<Response [200]>, single_get_response=[], post_data=[], patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_second.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns a specific Asset Administration Shell', 'operationId': 'GetAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Updates an existing Asset Administration Shell', 'operationId': 'PutAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Deletes an Asset Administration Shell', 'operationId': 'DeleteAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.second_test.endpoints_preparation.negative_test_two.PreparePPDNegativeTwo'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_second.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[]), <Response [400]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells/{aasIdentifier}', 'get', PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns a specific Asset Administration Shell', 'operationId': 'GetAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Updates an existing Asset Administration Shell', 'operationId': 'PutAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Deletes an Asset Administration Shell', 'operationId': 'DeleteAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}', substituted_url='/shells/{aasIdentifier}', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.296+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.296+00:00'}]}, post_data=None, patch_data=None, put_data={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.296+00:00'}]}, post_response=None, post_response_json=None, put_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Illegal base64 character 25', 'code': '', 'timestamp': '2022-10-22T18:09:25.307+00:00'}]}, put_response=<Response [400]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_second.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells/{aasIdentifier}', 'put', PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Returns a specific Asset Administration Shell', 'operationId': 'GetAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShellById/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Updates an existing Asset Administration Shell', 'operationId': 'PutAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShellById/1/0/RC01']}, 'delete': {'tags': ['Asset Administration Shell Repository Interface'], 'summary': 'Deletes an Asset Administration Shell', 'operationId': 'DeleteAssetAdministrationShellById', 'parameters': [{'name': 'aasIdentifier', 'in': 'path', 'description': 'The Asset Administration Shell’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Asset Administration Shell deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteAssetAdministrationShellById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}', substituted_url='/shells/{aasIdentifier}', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.296+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.296+00:00'}]}, post_data=None, patch_data=None, put_data={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.296+00:00'}]}, post_response=None, post_response_json=None, put_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Illegal base64 character 25', 'code': '', 'timestamp': '2022-10-22T18:09:25.307+00:00'}]}, put_response=<Response [400]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_second.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Administration Shell', 'operationId': 'GetAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShell/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Administration Shell', 'operationId': 'PutAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.second_test.endpoints_preparation.negative_test_two.PreparePPDNegativeTwo'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_second.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/{aasIdentifier}', path='/shells/{aasIdentifier}', operation='delete')]), <Response [400]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells/{aasIdentifier}/aas', 'get', PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Administration Shell', 'operationId': 'GetAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShell/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Administration Shell', 'operationId': 'PutAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas', substituted_url='/shells/{aasIdentifier}/aas', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.349+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.349+00:00'}]}, post_data=None, patch_data=None, put_data={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.349+00:00'}]}, post_response=None, post_response_json=None, put_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Illegal base64 character 25', 'code': '', 'timestamp': '2022-10-22T18:09:25.359+00:00'}]}, put_response=<Response [400]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_second.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells/{aasIdentifier}/aas', 'put', PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Administration Shell', 'operationId': 'GetAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'responses': {'200': {'description': 'Requested Asset Administration Shell', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetAdministrationShell/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Administration Shell', 'operationId': 'PutAssetAdministrationShell', 'parameters': [{'name': 'content', 'in': 'query', 'description': 'Determines the request or response kind of the resource', 'required': False, 'schema': {'type': 'string', 'default': 'normal', 'enum': ['normal', 'trimmed', 'value', 'reference', 'path']}}], 'requestBody': {'description': 'Asset Administration Shell object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetAdministrationShell'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Administration Shell updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetAdministrationShell/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas', substituted_url='/shells/{aasIdentifier}/aas', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.349+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.349+00:00'}]}, post_data=None, patch_data=None, put_data={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.349+00:00'}]}, post_response=None, post_response_json=None, put_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Illegal base64 character 25', 'code': '', 'timestamp': '2022-10-22T18:09:25.359+00:00'}]}, put_response=<Response [400]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_second.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Information', 'operationId': 'GetAssetInformation', 'responses': {'200': {'description': 'Requested Asset Information', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetInformation/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Information', 'operationId': 'PutAssetInformation', 'requestBody': {'description': 'Asset Information object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Information updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetInformation/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas/asset-information', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.second_test.endpoints_preparation.negative_test_two.PreparePPDNegativeTwo'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_second.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/{aasIdentifier}', path='/shells/{aasIdentifier}', operation='delete')]), <Response [400]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells/{aasIdentifier}/aas/asset-information', 'get', PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Information', 'operationId': 'GetAssetInformation', 'responses': {'200': {'description': 'Requested Asset Information', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetInformation/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Information', 'operationId': 'PutAssetInformation', 'requestBody': {'description': 'Asset Information object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Information updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetInformation/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas/asset-information', substituted_url='/shells/{aasIdentifier}/aas/asset-information', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Illegal base64 character 25', 'code': '', 'timestamp': '2022-10-22T18:09:25.387+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Illegal base64 character 25', 'code': '', 'timestamp': '2022-10-22T18:09:25.387+00:00'}]}, post_data=None, patch_data=None, put_data={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Illegal base64 character 25', 'code': '', 'timestamp': '2022-10-22T18:09:25.387+00:00'}]}, post_response=None, post_response_json=None, put_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Illegal base64 character 25', 'code': '', 'timestamp': '2022-10-22T18:09:25.399+00:00'}]}, put_response=<Response [400]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_second.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells/{aasIdentifier}/aas/asset-information', 'put', PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns the Asset Information', 'operationId': 'GetAssetInformation', 'responses': {'200': {'description': 'Requested Asset Information', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAssetInformation/1/0/RC01']}, 'put': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Updates the Asset Information', 'operationId': 'PutAssetInformation', 'requestBody': {'description': 'Asset Information object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AssetInformation'}}}, 'required': True}, 'responses': {'204': {'description': 'Asset Information updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutAssetInformation/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas/asset-information', substituted_url='/shells/{aasIdentifier}/aas/asset-information', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Illegal base64 character 25', 'code': '', 'timestamp': '2022-10-22T18:09:25.387+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Illegal base64 character 25', 'code': '', 'timestamp': '2022-10-22T18:09:25.387+00:00'}]}, post_data=None, patch_data=None, put_data={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Illegal base64 character 25', 'code': '', 'timestamp': '2022-10-22T18:09:25.387+00:00'}]}, post_response=None, post_response_json=None, put_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Illegal base64 character 25', 'code': '', 'timestamp': '2022-10-22T18:09:25.399+00:00'}]}, put_response=<Response [400]>, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_second.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns all submodel references', 'operationId': 'GetAllSubmodelReferences', 'responses': {'200': {'description': 'Requested submodel references', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Reference'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelReferences/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Creates a submodel reference at the Asset Administration Shell', 'operationId': 'PostSubmodelReference', 'requestBody': {'description': 'Reference to the Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel reference created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelReference/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas/submodels', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.second_test.endpoints_preparation.negative_test_two.PreparePPDNegativeTwo'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_second.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/{aasIdentifier}', path='/shells/{aasIdentifier}', operation='delete')]), <Response [400]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells/{aasIdentifier}/aas/submodels', 'get', PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns all submodel references', 'operationId': 'GetAllSubmodelReferences', 'responses': {'200': {'description': 'Requested submodel references', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Reference'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelReferences/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Creates a submodel reference at the Asset Administration Shell', 'operationId': 'PostSubmodelReference', 'requestBody': {'description': 'Reference to the Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel reference created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelReference/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas/submodels', substituted_url='/shells/{aasIdentifier}/aas/submodels', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.435+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.435+00:00'}]}, post_data={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.435+00:00'}]}, patch_data=None, put_data=None, post_response=<Response [400]>, post_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Illegal base64 character 25', 'code': '', 'timestamp': '2022-10-22T18:09:25.445+00:00'}]}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_second.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (<Response [400]>,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/shells/{aasIdentifier}/aas/submodels', 'post', PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Returns all submodel references', 'operationId': 'GetAllSubmodelReferences', 'responses': {'200': {'description': 'Requested submodel references', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Reference'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodelReferences/1/0/RC01']}, 'post': {'tags': ['Asset Administration Shell Interface'], 'summary': 'Creates a submodel reference at the Asset Administration Shell', 'operationId': 'PostSubmodelReference', 'requestBody': {'description': 'Reference to the Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel reference created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Reference'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodelReference/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/shells/{aasIdentifier}/aas/submodels', substituted_url='/shells/{aasIdentifier}/aas/submodels', path_params=None, get_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.435+00:00'}]}, get_response=<Response [400]>, single_get_response={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.435+00:00'}]}, post_data={'success': False, 'messages': [{'messageType': 'Error', 'text': 'invalid output modifier', 'code': '', 'timestamp': '2022-10-22T18:09:25.435+00:00'}]}, patch_data=None, put_data=None, post_response=<Response [400]>, post_response_json={'success': False, 'messages': [{'messageType': 'Error', 'text': 'Illegal base64 character 25', 'code': '', 'timestamp': '2022-10-22T18:09:25.445+00:00'}]}, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_second.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns all Submodels', 'operationId': 'GetAllSubmodels', 'parameters': [{'name': 'semanticId', 'in': 'query', 'description': 'The value of the semantic id reference (BASE64-URL-encoded)', 'schema': {'type': 'string'}}, {'name': 'idShort', 'in': 'query', 'description': 'The Submodel’s idShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodels', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Submodel'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodels/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/1/0/RC01']}, 'post': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new Submodel', 'operationId': 'PostSubmodel', 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
INFO:root:Ran with args: (TestRunner(preparation_class=<class 'asset_administration_shells_test_suits.negative_tests.second_test.endpoints_preparation.negative_test_two.PreparePPDNegativeTwo'>, aas_schema=AasSchemaParser(file_location='aas_openapi_specifications/open_api_specification_aas_v2.json'), _id=None, password=None, output_file_name='test_reports/Test Report_fAAAST_negative_second.txt', base_url='http://localhost:8080', aas_path='http://localhost:8080/shells/', sub_model_path='http://localhost:8080/submodels/{submodelIdentifier}', concept_description_path='http://localhost:8080/concept-descriptions/', delete_urls=[DeleteEndpoint(substituted_url='/shells/{aasIdentifier}', path='/shells/{aasIdentifier}', operation='delete')]), <Response [200]>), and kwargs: {'positive': False}
INFO:root:Ran with args: ('/submodels', 'get', PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns all Submodels', 'operationId': 'GetAllSubmodels', 'parameters': [{'name': 'semanticId', 'in': 'query', 'description': 'The value of the semantic id reference (BASE64-URL-encoded)', 'schema': {'type': 'string'}}, {'name': 'idShort', 'in': 'query', 'description': 'The Submodel’s idShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodels', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Submodel'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodels/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/1/0/RC01']}, 'post': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new Submodel', 'operationId': 'PostSubmodel', 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels', substituted_url='/submodels', path_params=None, get_response_json=[{'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/1145_8090_6012_5097'}, 'idShort': 'Config'}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2110_9090_6012_8448'}, 'idShort': 'CalculatedAverages', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'GripperUpAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'GripperOpenAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'DistanceSensorAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateEntranceAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateMiddleAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateExitAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltForwardAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltBackwardAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'isRunningAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_greenAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_yellowAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_redAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltReadyAverage'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/5410_9090_6012_0950'}, 'idShort': 'DaySummary', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'string', 'idShort': 'JTS_data'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2402_1191_1022_1090'}, 'idShort': 'ProducerRecommendations', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '4.1', 'valueType': 'float', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '16.2', 'valueType': 'float', 'idShort': 'ProcessDuration'}]}], get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2402_1191_1022_1090'}, 'idShort': 'ProducerRecommendations', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '4.1', 'valueType': 'float', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '16.2', 'valueType': 'float', 'idShort': 'ProcessDuration'}]}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), AttributeError("'list' object has no attribute 'get'"), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_second.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (None,), and kwargs: {'positive': False}
INFO:root:Ran with args: ('not implemented', '/submodels', 'post', PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns all Submodels', 'operationId': 'GetAllSubmodels', 'parameters': [{'name': 'semanticId', 'in': 'query', 'description': 'The value of the semantic id reference (BASE64-URL-encoded)', 'schema': {'type': 'string'}}, {'name': 'idShort', 'in': 'query', 'description': 'The Submodel’s idShort', 'required': False, 'style': 'form', 'explode': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodels', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Submodel'}}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetAllSubmodels/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/1/0/RC01', 'https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/1/0/RC01']}, 'post': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new Submodel', 'operationId': 'PostSubmodel', 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PostSubmodel/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels', substituted_url='/submodels', path_params=None, get_response_json=[{'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/1145_8090_6012_5097'}, 'idShort': 'Config'}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2110_9090_6012_8448'}, 'idShort': 'CalculatedAverages', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'GripperUpAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'GripperOpenAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'DistanceSensorAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateEntranceAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateMiddleAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LightGateExitAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltForwardAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltBackwardAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'isRunningAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_greenAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_yellowAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'LED_redAverage'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '0', 'valueType': 'float', 'category': 'Variable', 'idShort': 'ConveyorBeltReadyAverage'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/5410_9090_6012_0950'}, 'idShort': 'DaySummary', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '', 'valueType': 'string', 'idShort': 'JTS_data'}]}, {'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2402_1191_1022_1090'}, 'idShort': 'ProducerRecommendations', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '4.1', 'valueType': 'float', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '16.2', 'valueType': 'float', 'idShort': 'ProcessDuration'}]}], get_response=<Response [200]>, single_get_response={'modelType': {'name': 'Submodel'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'identification': {'idType': 'Iri', 'id': 'https://example.com/ids/sm/2402_1191_1022_1090'}, 'idShort': 'ProducerRecommendations', 'submodelElements': [{'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '4.1', 'valueType': 'float', 'idShort': 'Pressure'}, {'modelType': {'name': 'Property'}, 'kind': 'Instance', 'semanticId': {'keys': [{'idType': 'Iri', 'type': 'GlobalReference', 'value': '0173-1#02-AAO677#002'}]}, 'value': '16.2', 'valueType': 'float', 'idShort': 'ProcessDuration'}]}, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), <_io.TextIOWrapper name='test_reports/Test Report_fAAAST_negative_second.txt' mode='a' encoding='UTF-8'>), and kwargs: {}
INFO:root:Ran with args: (PreparePPDNegativeTwo(asset_administration_shells=[], base_url='http://localhost:8080', raw_endpoint={'get': {'tags': ['Submodel Repository Interface'], 'summary': 'Returns a specific Submodel', 'operationId': 'GetSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'Requested Submodel', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/GetSubmodelById/1/0/RC01']}, 'put': {'tags': ['Submodel Repository Interface'], 'summary': 'Creates a new or updates an existing Submodel', 'operationId': 'PutSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Submodel object', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}, 'required': True}, 'responses': {'201': {'description': 'Submodel created successfully', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Submodel'}}}}, '204': {'description': 'Submodel updated successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/PutSubmodelById/1/0/RC01']}, 'delete': {'tags': ['Submodel Repository Interface'], 'summary': 'Deletes a Submodel', 'operationId': 'DeleteSubmodelById', 'parameters': [{'name': 'submodelIdentifier', 'in': 'path', 'description': 'The Submodel’s unique id (BASE64-URL-encoded)', 'required': True, 'style': 'simple', 'explode': False, 'schema': {'type': 'string'}}], 'responses': {'204': {'description': 'Submodel deleted successfully'}}, 'x-semanticIds': ['https://admin-shell.io/aas/API/DeleteSubmodelById/1/0/RC01']}}, password=None, _id=None, concept_description=None, packages=None, full_url_path='/submodels/{submodelIdentifier}', substituted_url=None, path_params=None, get_response_json=None, get_response=None, single_get_response=None, post_data=None, patch_data=None, put_data=None, post_response=None, post_response_json=None, put_response_json=None, put_response=None, delete_response=None, delete_response_json=None, patch_response=None, not_implemented_error_msg='no matching request mapper found', number_of_objects_available=0, is_implemented=True), 'get', ''), and kwargs: {}
INFO:root:Ran with args: (['content', 'test', 'test2'],), and kwargs: {}
